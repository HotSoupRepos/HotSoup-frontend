{"version":3,"sources":["../../../src/utils/validateApplicationId.ts"],"sourcesContent":["import assert from 'assert';\nimport chalk from 'chalk';\nimport fetch from 'node-fetch';\n\nimport { learnMore } from './link';\nimport { isUrlAvailableAsync } from './url';\n\nconst IOS_BUNDLE_ID_REGEX = /^[a-zA-Z0-9-.]+$/;\nconst ANDROID_PACKAGE_REGEX = /^[a-zA-Z][a-zA-Z0-9_]*(\\.[a-zA-Z][a-zA-Z0-9_]*)+$/;\n\n/** Validate an iOS bundle identifier. */\nexport function validateBundleId(value: string): boolean {\n  return IOS_BUNDLE_ID_REGEX.test(value);\n}\n\n/** Validate an Android package name. */\nexport function validatePackage(value: string): boolean {\n  return ANDROID_PACKAGE_REGEX.test(value);\n}\n\nexport function assertValidBundleId(value: string) {\n  assert.match(\n    value,\n    IOS_BUNDLE_ID_REGEX,\n    `The ios.bundleIdentifier defined in your Expo config is not formatted properly. Only alphanumeric characters, '.', '-', and '_' are allowed, and each '.' must be followed by a letter.`\n  );\n}\n\nexport function assertValidPackage(value: string) {\n  assert.match(\n    value,\n    ANDROID_PACKAGE_REGEX,\n    `Invalid format of Android package name. Only alphanumeric characters, '.' and '_' are allowed, and each '.' must be followed by a letter.`\n  );\n}\n\nconst cachedBundleIdResults: Record<string, string> = {};\nconst cachedPackageNameResults: Record<string, string> = {};\n\n/** Returns a warning message if an iOS bundle identifier is potentially already in use. */\nexport async function getBundleIdWarningAsync(bundleId: string): Promise<string | null> {\n  // Prevent fetching for the same ID multiple times.\n  if (cachedBundleIdResults[bundleId]) {\n    return cachedBundleIdResults[bundleId];\n  }\n\n  if (!(await isUrlAvailableAsync('itunes.apple.com'))) {\n    // If no network, simply skip the warnings since they'll just lead to more confusion.\n    return null;\n  }\n\n  const url = `http://itunes.apple.com/lookup?bundleId=${bundleId}`;\n  try {\n    const response = await fetch(url);\n    const json = await response.json();\n    if (json.resultCount > 0) {\n      const firstApp = json.results[0];\n      const message = formatInUseWarning(firstApp.trackName, firstApp.sellerName, bundleId);\n      cachedBundleIdResults[bundleId] = message;\n      return message;\n    }\n  } catch {\n    // Error fetching itunes data.\n  }\n  return null;\n}\n\n/** Returns a warning message if an Android package name is potentially already in use. */\nexport async function getPackageNameWarningAsync(packageName: string): Promise<string | null> {\n  // Prevent fetching for the same ID multiple times.\n  if (cachedPackageNameResults[packageName]) {\n    return cachedPackageNameResults[packageName];\n  }\n\n  if (!(await isUrlAvailableAsync('play.google.com'))) {\n    // If no network, simply skip the warnings since they'll just lead to more confusion.\n    return null;\n  }\n\n  const url = `https://play.google.com/store/apps/details?id=${packageName}`;\n  try {\n    const response = await fetch(url);\n    // If the page exists, then warn the user.\n    if (response.status === 200) {\n      // There is no JSON API for the Play Store so we can't concisely\n      // locate the app name and developer to match the iOS warning.\n      const message = `⚠️  The package ${chalk.bold(packageName)} is already in use. ${chalk.dim(\n        learnMore(url)\n      )}`;\n      cachedPackageNameResults[packageName] = message;\n      return message;\n    }\n  } catch {\n    // Error fetching play store data or the page doesn't exist.\n  }\n  return null;\n}\n\nfunction formatInUseWarning(appName: string, author: string, id: string): string {\n  return `⚠️  The app ${chalk.bold(appName)} by ${chalk.italic(\n    author\n  )} is already using ${chalk.bold(id)}`;\n}\n"],"names":["validateBundleId","validatePackage","assertValidBundleId","assertValidPackage","getBundleIdWarningAsync","getPackageNameWarningAsync","IOS_BUNDLE_ID_REGEX","ANDROID_PACKAGE_REGEX","value","test","assert","match","cachedBundleIdResults","cachedPackageNameResults","bundleId","isUrlAvailableAsync","url","response","fetch","json","resultCount","firstApp","results","message","formatInUseWarning","trackName","sellerName","packageName","status","chalk","bold","dim","learnMore","appName","author","id","italic"],"mappings":"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"}