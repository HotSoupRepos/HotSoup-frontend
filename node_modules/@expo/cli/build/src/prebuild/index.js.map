{"version":3,"sources":["../../../src/prebuild/index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport chalk from 'chalk';\n\nimport { Command } from '../../bin/cli';\nimport { assertArgs, getProjectRoot, printHelp } from '../utils/args';\n\nexport const expoPrebuild: Command = async (argv) => {\n  const args = assertArgs(\n    {\n      // Types\n      '--help': Boolean,\n      '--clean': Boolean,\n      '--npm': Boolean,\n      '--no-install': Boolean,\n      '--template': String,\n      '--platform': String,\n      '--skip-dependency-update': String,\n      // Aliases\n      '-h': '--help',\n      '-p': '--platform',\n      '-t': '--type',\n    },\n    argv\n  );\n\n  if (args['--help']) {\n    printHelp(\n      `Create native iOS and Android project files for building natively`,\n      chalk`npx expo prebuild {dim <dir>}`,\n      [\n        chalk`<dir>                                    Directory of the Expo project. {dim Default: Current working directory}`,\n        `--no-install                             Skip installing npm packages and CocoaPods`,\n        `--clean                                  Delete the native folders and regenerate them before applying changes`,\n        chalk`--npm                                    Use npm to install dependencies. {dim Default when Yarn is not installed}`,\n        `--template <template>                    Project template to clone from. File path pointing to a local tar file or a github repo`,\n        chalk`-p, --platform <all|android|ios>         Platforms to sync: ios, android, all. {dim Default: all}`,\n        `--skip-dependency-update <dependencies>  Preserves versions of listed packages in package.json (comma separated list)`,\n        `-h, --help                               Usage info`,\n      ].join('\\n')\n    );\n  }\n\n  // Load modules after the help prompt so `npx expo prebuild -h` shows as fast as possible.\n  const [\n    // ./prebuildAsync\n    { prebuildAsync },\n    // ./resolveOptions\n    { resolvePlatformOption, resolveSkipDependencyUpdate },\n    // ../utils/errors\n    { logCmdError },\n  ] = await Promise.all([\n    import('./prebuildAsync'),\n    import('./resolveOptions'),\n    import('../utils/errors'),\n  ]);\n\n  return prebuildAsync(getProjectRoot(args), {\n    // Parsed options\n    clean: args['--clean'],\n    packageManager: args['--npm'] ? 'npm' : 'yarn',\n    install: !args['--no-install'],\n    platforms: resolvePlatformOption(args['--platform']),\n    // TODO: Parse\n    skipDependencyUpdate: resolveSkipDependencyUpdate(args['--skip-dependency-update']),\n    template: args['--template'],\n  }).catch(logCmdError);\n};\n"],"names":["expoPrebuild","argv","args","assertArgs","Boolean","String","printHelp","chalk","join","prebuildAsync","resolvePlatformOption","resolveSkipDependencyUpdate","logCmdError","Promise","all","getProjectRoot","clean","packageManager","install","platforms","skipDependencyUpdate","template","catch"],"mappings":"AAAA;;;;;;AACkB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAG6B,IAAA,KAAe,WAAf,eAAe,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9D,MAAMA,YAAY,GAAY,OAAOC,IAAI,GAAK;IACnD,MAAMC,IAAI,GAAGC,CAAAA,GAAAA,KAAU,AAgBtB,CAAA,WAhBsB,CACrB;QACE,QAAQ;QACR,QAAQ,EAAEC,OAAO;QACjB,SAAS,EAAEA,OAAO;QAClB,OAAO,EAAEA,OAAO;QAChB,cAAc,EAAEA,OAAO;QACvB,YAAY,EAAEC,MAAM;QACpB,YAAY,EAAEA,MAAM;QACpB,0BAA0B,EAAEA,MAAM;QAClC,UAAU;QACV,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,QAAQ;KACf,EACDJ,IAAI,CACL,AAAC;IAEF,IAAIC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAClBI,CAAAA,GAAAA,KAAS,AAaR,CAAA,UAbQ,CACP,CAAC,iEAAiE,CAAC,EACnEC,MAAK,QAAA,CAAC,6BAA6B,CAAC,EACpC;YACEA,MAAK,QAAA,CAAC,gHAAgH,CAAC;YACvH,CAAC,mFAAmF,CAAC;YACrF,CAAC,8GAA8G,CAAC;YAChHA,MAAK,QAAA,CAAC,kHAAkH,CAAC;YACzH,CAAC,gIAAgI,CAAC;YAClIA,MAAK,QAAA,CAAC,iGAAiG,CAAC;YACxG,CAAC,qHAAqH,CAAC;YACvH,CAAC,mDAAmD,CAAC;SACtD,CAACC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;KACH;IAED,0FAA0F;IAC1F,MAAM,CACJ,kBAAkB;IAClB,EAAEC,aAAa,CAAA,EAAE,EACjB,mBAAmB;IACnB,EAAEC,qBAAqB,CAAA,EAAEC,2BAA2B,CAAA,EAAE,EACtD,kBAAkB;IAClB,EAAEC,WAAW,CAAA,EAAE,GAChB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC;QACpB;mDAAO,iBAAiB;UAAC;QACzB;mDAAO,kBAAkB;UAAC;QAC1B;mDAAO,iBAAiB;UAAC;KAC1B,CAAC,AAAC;IAEH,OAAOL,aAAa,CAACM,CAAAA,GAAAA,KAAc,AAAM,CAAA,eAAN,CAACb,IAAI,CAAC,EAAE;QACzC,iBAAiB;QACjBc,KAAK,EAAEd,IAAI,CAAC,SAAS,CAAC;QACtBe,cAAc,EAAEf,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,MAAM;QAC9CgB,OAAO,EAAE,CAAChB,IAAI,CAAC,cAAc,CAAC;QAC9BiB,SAAS,EAAET,qBAAqB,CAACR,IAAI,CAAC,YAAY,CAAC,CAAC;QACpD,cAAc;QACdkB,oBAAoB,EAAET,2BAA2B,CAACT,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACnFmB,QAAQ,EAAEnB,IAAI,CAAC,YAAY,CAAC;KAC7B,CAAC,CAACoB,KAAK,CAACV,WAAW,CAAC,CAAC;CACvB,AAAC;QA5DWZ,YAAY,GAAZA,YAAY"}