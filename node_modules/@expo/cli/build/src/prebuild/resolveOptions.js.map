{"version":3,"sources":["../../../src/prebuild/resolveOptions.ts"],"sourcesContent":["import { ModPlatform } from '@expo/config-plugins';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as Log from '../log';\nimport { CommandError } from '../utils/errors';\nimport { validateUrl } from '../utils/url';\n\n/** Resolves a template option as a URL or file path pointing to a tar file. */\nexport function resolveTemplateOption(template: string) {\n  if (validateUrl(template)) {\n    return template;\n  }\n  const templatePath = path.resolve(template);\n  assert(fs.existsSync(templatePath), 'template file does not exist: ' + templatePath);\n  assert(\n    fs.statSync(templatePath).isFile(),\n    'template must be a tar file created by running `npm pack` in a project: ' + templatePath\n  );\n\n  return templatePath;\n}\n\n/** Resolves dependencies to skip from a string joined by `,`. Example: `react-native,expo,lodash` */\nexport function resolveSkipDependencyUpdate(value: any) {\n  if (!value || typeof value !== 'string') {\n    return [];\n  }\n  return value.split(',');\n}\n\n/** Returns an array of platforms based on the input platform identifier and runtime constraints. */\nexport function resolvePlatformOption(\n  platform: string = 'all',\n  { loose }: { loose?: boolean } = {}\n): ModPlatform[] {\n  switch (platform) {\n    case 'ios':\n      return ['ios'];\n    case 'android':\n      return ['android'];\n    case 'all':\n      if (loose || process.platform !== 'win32') {\n        return ['android', 'ios'];\n      }\n      return ['android'];\n    default:\n      throw new CommandError(`Unsupported platform \"${platform}\". Options are: ios, android, all`);\n  }\n}\n\n/** Warns and filters out unsupported platforms based on the runtime constraints. Essentially this means no iOS on Windows devices. */\nexport function ensureValidPlatforms(platforms: ModPlatform[]): ModPlatform[] {\n  // Skip ejecting for iOS on Windows\n  if (process.platform === 'win32' && platforms.includes('ios')) {\n    Log.warn(\n      chalk`⚠️  Skipping generating the iOS native project files. Run {bold expo eject} again from macOS or Linux to generate the iOS project.\\n`\n    );\n    return platforms.filter((platform) => platform !== 'ios');\n  }\n  return platforms;\n}\n\n/** Asserts platform length must be greater than zero. */\nexport function assertPlatforms(platforms: ModPlatform[]) {\n  if (!platforms?.length) {\n    throw new CommandError('At least one platform must be enabled when syncing');\n  }\n}\n"],"names":["resolveTemplateOption","resolveSkipDependencyUpdate","resolvePlatformOption","ensureValidPlatforms","assertPlatforms","Log","template","validateUrl","templatePath","path","resolve","assert","fs","existsSync","statSync","isFile","value","split","platform","loose","process","CommandError","platforms","includes","warn","chalk","filter","length"],"mappings":"AAAA;;;;QAWgBA,qBAAqB,GAArBA,qBAAqB;QAerBC,2BAA2B,GAA3BA,2BAA2B;QAQ3BC,qBAAqB,GAArBA,qBAAqB;QAoBrBC,oBAAoB,GAApBA,oBAAoB;QAYpBC,eAAe,GAAfA,eAAe;AAjEZ,IAAA,OAAQ,kCAAR,QAAQ,EAAA;AACT,IAAA,MAAO,kCAAP,OAAO,EAAA;AACV,IAAA,GAAI,kCAAJ,IAAI,EAAA;AACF,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEXC,IAAAA,GAAG,mCAAM,QAAQ,EAAd;AACc,IAAA,OAAiB,WAAjB,iBAAiB,CAAA;AAClB,IAAA,IAAc,WAAd,cAAc,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGnC,SAASL,qBAAqB,CAACM,QAAgB,EAAE;IACtD,IAAIC,CAAAA,GAAAA,IAAW,AAAU,CAAA,YAAV,CAACD,QAAQ,CAAC,EAAE;QACzB,OAAOA,QAAQ,CAAC;KACjB;IACD,MAAME,YAAY,GAAGC,KAAI,QAAA,CAACC,OAAO,CAACJ,QAAQ,CAAC,AAAC;IAC5CK,CAAAA,GAAAA,OAAM,AAA8E,CAAA,QAA9E,CAACC,GAAE,QAAA,CAACC,UAAU,CAACL,YAAY,CAAC,EAAE,gCAAgC,GAAGA,YAAY,CAAC,CAAC;IACrFG,CAAAA,GAAAA,OAAM,AAGL,CAAA,QAHK,CACJC,GAAE,QAAA,CAACE,QAAQ,CAACN,YAAY,CAAC,CAACO,MAAM,EAAE,EAClC,0EAA0E,GAAGP,YAAY,CAC1F,CAAC;IAEF,OAAOA,YAAY,CAAC;CACrB;AAGM,SAASP,2BAA2B,CAACe,KAAU,EAAE;IACtD,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QACvC,OAAO,EAAE,CAAC;KACX;IACD,OAAOA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC;CACzB;AAGM,SAASf,qBAAqB,CACnCgB,QAAgB,GAAG,KAAK,EACxB,EAAEC,KAAK,CAAA,EAAuB,GAAG,EAAE,EACpB;IACf,OAAQD,QAAQ;QACd,KAAK,KAAK;YACR,OAAO;gBAAC,KAAK;aAAC,CAAC;QACjB,KAAK,SAAS;YACZ,OAAO;gBAAC,SAAS;aAAC,CAAC;QACrB,KAAK,KAAK;YACR,IAAIC,KAAK,IAAIC,OAAO,CAACF,QAAQ,KAAK,OAAO,EAAE;gBACzC,OAAO;oBAAC,SAAS;oBAAE,KAAK;iBAAC,CAAC;aAC3B;YACD,OAAO;gBAAC,SAAS;aAAC,CAAC;QACrB;YACE,MAAM,IAAIG,OAAY,aAAA,CAAC,CAAC,sBAAsB,EAAEH,QAAQ,CAAC,iCAAiC,CAAC,CAAC,CAAC;KAChG;CACF;AAGM,SAASf,oBAAoB,CAACmB,SAAwB,EAAiB;IAC5E,mCAAmC;IACnC,IAAIF,OAAO,CAACF,QAAQ,KAAK,OAAO,IAAII,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC7DlB,GAAG,CAACmB,IAAI,CACNC,MAAK,QAAA,CAAC,wIAAoI,CAAC,CAC5I,CAAC;QACF,OAAOH,SAAS,CAACI,MAAM,CAAC,CAACR,QAAQ,GAAKA,QAAQ,KAAK,KAAK;QAAA,CAAC,CAAC;KAC3D;IACD,OAAOI,SAAS,CAAC;CAClB;AAGM,SAASlB,eAAe,CAACkB,SAAwB,EAAE;IACxD,IAAI,CAACA,CAAAA,SAAS,QAAQ,GAAjBA,KAAAA,CAAiB,GAAjBA,SAAS,CAAEK,MAAM,CAAA,EAAE;QACtB,MAAM,IAAIN,OAAY,aAAA,CAAC,oDAAoD,CAAC,CAAC;KAC9E;CACF"}