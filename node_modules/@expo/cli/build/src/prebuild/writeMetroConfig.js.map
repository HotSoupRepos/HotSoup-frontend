{"version":3,"sources":["../../../src/prebuild/writeMetroConfig.ts"],"sourcesContent":["import { PackageJSONConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as Log from '../log';\nimport { CommandError } from '../utils/errors';\nimport { learnMore } from '../utils/link';\nimport { logNewSection } from '../utils/ora';\nimport { createFileHash } from './updatePackageJson';\n\nexport function writeMetroConfig(\n  projectRoot: string,\n  {\n    pkg,\n    templateDirectory,\n  }: {\n    pkg: PackageJSONConfig;\n    templateDirectory: string;\n  }\n) {\n  /**\n   * Add metro config, or warn if metro config already exists. The developer will need to add the\n   * hashAssetFiles plugin manually.\n   */\n\n  const updatingMetroConfigStep = logNewSection('Adding Metro bundler config');\n\n  try {\n    const didChange = copyTemplateMetroConfig(projectRoot, { pkg, templateDirectory });\n    if (!didChange) {\n      // Nothing to change, hide the step and exit.\n      updatingMetroConfigStep.stop();\n      updatingMetroConfigStep.clear();\n      return;\n    }\n    updatingMetroConfigStep.succeed('Added Metro config');\n  } catch (error: any) {\n    updatingMetroConfigStep.stopAndPersist({\n      symbol: chalk.yellow('â€º'),\n      text: chalk.yellow(chalk`{bold Metro skipped:} ${error.message}`),\n    });\n    // Log.log(`\\u203A ${e.message}`);\n    Log.log(\n      chalk`\\u203A Ensure the project uses {bold @expo/metro-config}.\\n  {dim ${learnMore(\n        'https://docs.expo.dev/guides/customizing-metro'\n      )}}`\n    );\n  }\n}\n\n/**\n * Detects if the project's existing `metro.config.js` matches the template, and if not,\n * throws errors indicating what the user should do.\n *\n * > Exposed for testing.\n *\n * @returns Boolean indicating the `metro.config.js` changed.\n */\nexport function copyTemplateMetroConfig(\n  projectRoot: string,\n  {\n    pkg,\n    templateDirectory,\n  }: {\n    pkg: PackageJSONConfig;\n    templateDirectory: string;\n  }\n): boolean {\n  const sourceConfigPath = path.join(templateDirectory, 'metro.config.js');\n  const targetConfigPath = path.join(projectRoot, 'metro.config.js');\n  const targetConfigPathExists = fs.existsSync(targetConfigPath);\n  if (targetConfigPathExists) {\n    // Prevent re-runs from throwing an error if the metro config hasn't been modified.\n    const contents = createFileHash(fs.readFileSync(targetConfigPath, 'utf8'));\n    const targetContents = createFileHash(fs.readFileSync(sourceConfigPath, 'utf8'));\n    if (contents !== targetContents) {\n      throw new CommandError('Project metro.config.js does not match prebuild template.');\n    }\n    return false;\n  }\n\n  // We don't support legacy file names so just throw.\n  if (\n    fs.existsSync(path.join(projectRoot, 'metro.config.json')) ||\n    pkg.metro ||\n    fs.existsSync(path.join(projectRoot, 'rn-cli.config.js'))\n  ) {\n    throw new CommandError(\n      'Project is using a legacy config system that cannot be extend automatically.'\n    );\n  }\n\n  // Finally, copy if nothing goes wrong.\n  fs.copyFileSync(sourceConfigPath, targetConfigPath);\n\n  return true;\n}\n"],"names":["writeMetroConfig","copyTemplateMetroConfig","Log","projectRoot","pkg","templateDirectory","updatingMetroConfigStep","logNewSection","didChange","stop","clear","succeed","error","stopAndPersist","symbol","chalk","yellow","text","message","log","learnMore","sourceConfigPath","path","join","targetConfigPath","targetConfigPathExists","fs","existsSync","contents","createFileHash","readFileSync","targetContents","CommandError","metro","copyFileSync"],"mappings":"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"}