{"version":3,"sources":["../../../../../../src/run/ios/appleDevice/protocol/LockdownProtocol.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport { Socket } from 'net';\n\nimport { CommandError } from '../../../../utils/errors';\nimport type { ProtocolWriter } from './AbstractProtocol';\nimport { PlistProtocolReader, ProtocolClient, ProtocolReaderFactory } from './AbstractProtocol';\n\nconst debug = Debug('expo:apple-device:protocol:lockdown');\nexport const LOCKDOWN_HEADER_SIZE = 4;\n\nexport interface LockdownCommand {\n  Command: string;\n  [key: string]: any;\n}\n\nexport interface LockdownResponse {\n  Status: string;\n  [key: string]: any;\n}\n\nexport interface LockdownErrorResponse {\n  Error: string;\n  Request?: string;\n  Service?: string;\n}\n\nexport interface LockdownRequest {\n  Request: string;\n  [key: string]: any;\n}\n\nfunction isDefined(val: any) {\n  return typeof val !== 'undefined';\n}\n\nexport function isLockdownResponse(resp: any): resp is LockdownResponse {\n  return isDefined(resp.Status);\n}\n\nexport function isLockdownErrorResponse(resp: any): resp is LockdownErrorResponse {\n  return isDefined(resp.Error);\n}\n\nexport class LockdownProtocolClient<\n  MessageType extends LockdownRequest | LockdownCommand = LockdownRequest\n> extends ProtocolClient<MessageType> {\n  constructor(socket: Socket) {\n    super(socket, new ProtocolReaderFactory(LockdownProtocolReader), new LockdownProtocolWriter());\n  }\n}\n\nexport class LockdownProtocolReader extends PlistProtocolReader {\n  constructor(callback: (data: any) => any) {\n    super(LOCKDOWN_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    return data.readUInt32BE(0);\n  }\n\n  parseBody(data: Buffer) {\n    const resp = super.parseBody(data);\n    debug(`Response: ${JSON.stringify(resp)}`);\n    if (isLockdownErrorResponse(resp)) {\n      if (resp.Error === 'DeviceLocked') {\n        throw new CommandError('APPLE_DEVICE_LOCKED', 'Device is currently locked.');\n      }\n\n      if (resp.Error === 'InvalidService') {\n        let errorMessage = `${resp.Error}: ${resp.Service} (request: ${resp.Request})`;\n        if (resp.Service === 'com.apple.debugserver') {\n          errorMessage +=\n            '\\nTry reconnecting your device. You can also debug service logs with `export DEBUG=expo:xdl:ios:*`';\n        }\n        throw new CommandError('APPLE_DEVICE_LOCKDOWN', errorMessage);\n      }\n\n      throw new CommandError('APPLE_DEVICE_LOCKDOWN', resp.Error);\n    }\n    return resp;\n  }\n}\n\nexport class LockdownProtocolWriter implements ProtocolWriter {\n  write(socket: Socket, plistData: any) {\n    debug(`socket write: ${JSON.stringify(plistData)}`);\n    const plistMessage = plist.build(plistData);\n    const header = Buffer.alloc(LOCKDOWN_HEADER_SIZE);\n    header.writeUInt32BE(plistMessage.length, 0);\n    socket.write(header);\n    socket.write(plistMessage);\n  }\n}\n"],"names":["isLockdownResponse","isLockdownErrorResponse","debug","Debug","LOCKDOWN_HEADER_SIZE","isDefined","val","resp","Status","Error","LockdownProtocolClient","ProtocolClient","constructor","socket","ProtocolReaderFactory","LockdownProtocolReader","LockdownProtocolWriter","PlistProtocolReader","callback","parseHeader","data","readUInt32BE","parseBody","JSON","stringify","CommandError","errorMessage","Service","Request","write","plistData","plistMessage","plist","build","header","Buffer","alloc","writeUInt32BE","length"],"mappings":"AAQA;;;;QAoCgBA,kBAAkB,GAAlBA,kBAAkB;QAIlBC,uBAAuB,GAAvBA,uBAAuB;;AAxCrB,IAAA,MAAa,kCAAb,aAAa,EAAA;AACb,IAAA,MAAO,kCAAP,OAAO,EAAA;AAGI,IAAA,OAA0B,WAA1B,0BAA0B,CAAA;AAEoB,IAAA,iBAAoB,WAApB,oBAAoB,CAAA;;;;;;AAE/F,MAAMC,KAAK,GAAGC,CAAAA,GAAAA,MAAK,AAAuC,CAAA,QAAvC,CAAC,qCAAqC,CAAC,AAAC;AACpD,MAAMC,oBAAoB,GAAG,CAAC,AAAC;QAAzBA,oBAAoB,GAApBA,oBAAoB;AAuBjC,SAASC,SAAS,CAACC,GAAQ,EAAE;IAC3B,OAAO,OAAOA,GAAG,KAAK,WAAW,CAAC;CACnC;AAEM,SAASN,kBAAkB,CAACO,IAAS,EAA4B;IACtE,OAAOF,SAAS,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC;CAC/B;AAEM,SAASP,uBAAuB,CAACM,IAAS,EAAiC;IAChF,OAAOF,SAAS,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC;CAC9B;AAEM,MAAMC,sBAAsB,SAEzBC,iBAAc,eAAA;IACtBC,YAAYC,MAAc,CAAE;QAC1B,KAAK,CAACA,MAAM,EAAE,IAAIC,iBAAqB,sBAAA,CAACC,sBAAsB,CAAC,EAAE,IAAIC,sBAAsB,EAAE,CAAC,CAAC;KAChG;CACF;QANYN,sBAAsB,GAAtBA,sBAAsB;AAQ5B,MAAMK,sBAAsB,SAASE,iBAAmB,oBAAA;IAC7DL,YAAYM,QAA4B,CAAE;QACxC,KAAK,CAACd,oBAAoB,EAAEc,QAAQ,CAAC,CAAC;KACvC;IAEDC,WAAW,CAACC,IAAY,EAAE;QACxB,OAAOA,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;KAC7B;IAEDC,SAAS,CAACF,IAAY,EAAE;QACtB,MAAMb,IAAI,GAAG,KAAK,CAACe,SAAS,CAACF,IAAI,CAAC,AAAC;QACnClB,KAAK,CAAC,CAAC,UAAU,EAAEqB,IAAI,CAACC,SAAS,CAACjB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAIN,uBAAuB,CAACM,IAAI,CAAC,EAAE;YACjC,IAAIA,IAAI,CAACE,KAAK,KAAK,cAAc,EAAE;gBACjC,MAAM,IAAIgB,OAAY,aAAA,CAAC,qBAAqB,EAAE,6BAA6B,CAAC,CAAC;aAC9E;YAED,IAAIlB,IAAI,CAACE,KAAK,KAAK,gBAAgB,EAAE;gBACnC,IAAIiB,YAAY,GAAG,CAAC,EAAEnB,IAAI,CAACE,KAAK,CAAC,EAAE,EAAEF,IAAI,CAACoB,OAAO,CAAC,WAAW,EAAEpB,IAAI,CAACqB,OAAO,CAAC,CAAC,CAAC,AAAC;gBAC/E,IAAIrB,IAAI,CAACoB,OAAO,KAAK,uBAAuB,EAAE;oBAC5CD,YAAY,IACV,oGAAoG,CAAC;iBACxG;gBACD,MAAM,IAAID,OAAY,aAAA,CAAC,uBAAuB,EAAEC,YAAY,CAAC,CAAC;aAC/D;YAED,MAAM,IAAID,OAAY,aAAA,CAAC,uBAAuB,EAAElB,IAAI,CAACE,KAAK,CAAC,CAAC;SAC7D;QACD,OAAOF,IAAI,CAAC;KACb;CACF;QA9BYQ,sBAAsB,GAAtBA,sBAAsB;AAgC5B,MAAMC,sBAAsB;IACjCa,KAAK,CAAChB,MAAc,EAAEiB,SAAc,EAAE;QACpC5B,KAAK,CAAC,CAAC,cAAc,EAAEqB,IAAI,CAACC,SAAS,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,MAAMC,YAAY,GAAGC,MAAK,QAAA,CAACC,KAAK,CAACH,SAAS,CAAC,AAAC;QAC5C,MAAMI,MAAM,GAAGC,MAAM,CAACC,KAAK,CAAChC,oBAAoB,CAAC,AAAC;QAClD8B,MAAM,CAACG,aAAa,CAACN,YAAY,CAACO,MAAM,EAAE,CAAC,CAAC,CAAC;QAC7CzB,MAAM,CAACgB,KAAK,CAACK,MAAM,CAAC,CAAC;QACrBrB,MAAM,CAACgB,KAAK,CAACE,YAAY,CAAC,CAAC;KAC5B;CACF;QATYf,sBAAsB,GAAtBA,sBAAsB"}