{"version":3,"sources":["../../../../../src/start/server/webpack/WebpackBundlerDevServer.ts"],"sourcesContent":["import { createSymbolicateMiddleware } from '@expo/dev-server/build/webpack/symbolicateMiddleware';\nimport chalk from 'chalk';\nimport type { Application } from 'express';\nimport fs from 'fs';\nimport http from 'http';\nimport * as path from 'path';\nimport resolveFrom from 'resolve-from';\nimport type webpack from 'webpack';\nimport type WebpackDevServer from 'webpack-dev-server';\n\nimport * as Log from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { getIpAddress } from '../../../utils/ip';\nimport { choosePortAsync } from '../../../utils/port';\nimport { ensureDotExpoProjectDirectoryInitialized } from '../../project/dotExpo';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport {\n  importExpoWebpackConfigFromProject,\n  importWebpackDevServerFromProject,\n  importWebpackFromProject,\n} from './resolveFromProject';\nimport { ensureEnvironmentSupportsTLSAsync } from './tls';\n\ntype AnyCompiler = webpack.Compiler | webpack.MultiCompiler;\n\nexport type WebpackConfiguration = webpack.Configuration & {\n  devServer?: {\n    before?: (app: Application, server: WebpackDevServer, compiler: webpack.Compiler) => void;\n  };\n};\n\nfunction assertIsWebpackDevServer(value: any): asserts value is WebpackDevServer {\n  if (!value?.sockWrite) {\n    throw new CommandError(\n      'WEBPACK',\n      value\n        ? 'Expected Webpack dev server, found: ' + (value.constructor?.name ?? value)\n        : 'Webpack dev server not started yet.'\n    );\n  }\n}\n\nexport class WebpackBundlerDevServer extends BundlerDevServer {\n  get name(): string {\n    return 'webpack';\n  }\n\n  // A custom message websocket broadcaster used to send messages to a React Native runtime.\n  private customMessageSocketBroadcaster:\n    | undefined\n    | ((message: string, data?: Record<string, any>) => void);\n\n  public broadcastMessage(\n    method: string | 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ): void {\n    if (!this.instance) {\n      return;\n    }\n\n    assertIsWebpackDevServer(this.instance?.server);\n\n    // Allow any message on native\n    if (this.customMessageSocketBroadcaster) {\n      this.customMessageSocketBroadcaster(method, params);\n      return;\n    }\n\n    // TODO(EvanBacon): Custom Webpack overlay.\n    // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n    // For now, just manually convert the value so our CLI interface can be unified.\n    const hackyConvertedMessage = method === 'reload' ? 'content-changed' : method;\n\n    this.instance.server.sockWrite(this.instance.server.sockets, hackyConvertedMessage, params);\n  }\n\n  private async attachNativeDevServerMiddlewareToDevServer({\n    server,\n    middleware,\n    attachToServer,\n    logger,\n  }: { server: http.Server } & Awaited<ReturnType<typeof this.createNativeDevServerMiddleware>>) {\n    const { attachInspectorProxy, LogReporter } = await import('@expo/dev-server');\n\n    // Hook up the React Native WebSockets to the Webpack dev server.\n    const { messageSocket, debuggerProxy, eventsSocket } = attachToServer(server);\n\n    this.customMessageSocketBroadcaster = messageSocket.broadcast;\n\n    const logReporter = new LogReporter(logger);\n    logReporter.reportEvent = eventsSocket.reportEvent;\n\n    const { inspectorProxy } = attachInspectorProxy(this.projectRoot, {\n      middleware,\n      server,\n    });\n\n    return {\n      messageSocket,\n      eventsSocket,\n      debuggerProxy,\n      logReporter,\n      inspectorProxy,\n    };\n  }\n\n  isTargetingNative(): boolean {\n    // Temporary hack while we implement multi-bundler dev server proxy.\n    return ['ios', 'android'].includes(process.env.EXPO_WEBPACK_PLATFORM || '');\n  }\n\n  isTargetingWeb(): boolean {\n    return true;\n  }\n\n  private async createNativeDevServerMiddleware({\n    port,\n    compiler,\n    options,\n  }: {\n    port: number;\n    compiler: AnyCompiler;\n    options: BundlerStartOptions;\n  }) {\n    if (!this.isTargetingNative()) {\n      return null;\n    }\n\n    const { createDevServerMiddleware } = await import('../middleware/createDevServerMiddleware');\n\n    const nativeMiddleware = createDevServerMiddleware(this.projectRoot, {\n      port,\n      watchFolders: [this.projectRoot],\n    });\n    // Add manifest middleware to the other middleware.\n    // TODO: Move this in to expo/dev-server.\n\n    const middleware = await this.getManifestMiddlewareAsync(options);\n\n    nativeMiddleware.middleware.use(middleware).use(\n      '/symbolicate',\n      createSymbolicateMiddleware({\n        projectRoot: this.projectRoot,\n        compiler,\n        logger: nativeMiddleware.logger,\n      })\n    );\n    return nativeMiddleware;\n  }\n\n  private async getAvailablePortAsync(options: { defaultPort?: number }): Promise<number> {\n    try {\n      const defaultPort = options?.defaultPort ?? 19006;\n      const port = await choosePortAsync(this.projectRoot, {\n        defaultPort,\n        host: env.WEB_HOST,\n      });\n      if (!port) {\n        throw new CommandError('NO_PORT_FOUND', `Port ${defaultPort} not available.`);\n      }\n      return port;\n    } catch (error: any) {\n      throw new CommandError('NO_PORT_FOUND', error.message);\n    }\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    // Do this first to fail faster.\n    const webpack = importWebpackFromProject(this.projectRoot);\n    const WebpackDevServer = importWebpackDevServerFromProject(this.projectRoot);\n\n    await this.stopAsync();\n\n    options.port = await this.getAvailablePortAsync({\n      defaultPort: options.port,\n    });\n    const { resetDevServer, https, port, mode } = options;\n\n    this.urlCreator = this.getUrlCreator({\n      port,\n      location: {\n        scheme: https ? 'https' : 'http',\n      },\n    });\n\n    Log.debug('Starting webpack on port: ' + port);\n\n    if (resetDevServer) {\n      await clearWebProjectCacheAsync(this.projectRoot, mode);\n    }\n\n    if (https) {\n      Log.debug('Configuring TLS to enable HTTPS support');\n      await ensureEnvironmentSupportsTLSAsync(this.projectRoot).catch((error) => {\n        Log.error(`Error creating TLS certificates: ${error}`);\n      });\n    }\n\n    const config = await this.loadConfigAsync(options);\n\n    Log.log(chalk`Starting Webpack on port ${port} in {underline ${mode}} mode.`);\n\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = webpack(config);\n\n    let nativeMiddleware: Awaited<ReturnType<typeof this.createNativeDevServerMiddleware>> | null =\n      null;\n    if (config.devServer?.before) {\n      // Create the middleware required for interacting with a native runtime (Expo Go, or a development build).\n      nativeMiddleware = await this.createNativeDevServerMiddleware({\n        port,\n        compiler,\n        options,\n      });\n      // Inject the native manifest middleware.\n      const originalBefore = config.devServer.before.bind(config.devServer.before);\n      config.devServer.before = (\n        app: Application,\n        server: WebpackDevServer,\n        compiler: webpack.Compiler\n      ) => {\n        originalBefore(app, server, compiler);\n\n        if (nativeMiddleware?.middleware) {\n          app.use(nativeMiddleware.middleware);\n        }\n      };\n    }\n    const { attachNativeDevServerMiddlewareToDevServer } = this;\n\n    const server = new WebpackDevServer(\n      // @ts-expect-error: type mismatch -- Webpack types aren't great.\n      compiler,\n      config.devServer\n    );\n    // Launch WebpackDevServer.\n    server.listen(port, env.WEB_HOST, function (this: http.Server, error) {\n      if (nativeMiddleware) {\n        attachNativeDevServerMiddlewareToDevServer({\n          server: this,\n          ...nativeMiddleware,\n        });\n      }\n      if (error) {\n        Log.error(error.message);\n      }\n    });\n\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        callback?.(err);\n      });\n    };\n\n    const _host = getIpAddress();\n    const protocol = https ? 'https' : 'http';\n\n    return {\n      // Server instance\n      server,\n      // URL Info\n      location: {\n        url: `${protocol}://${_host}:${port}`,\n        port,\n        protocol,\n        host: _host,\n      },\n      middleware: nativeMiddleware?.middleware,\n      // Match the native protocol.\n      messageSocket: {\n        broadcast: this.broadcastMessage,\n      },\n    };\n  }\n\n  /** Load the Webpack config. Exposed for testing. */\n  getProjectConfigFilePath(): string | null {\n    // Check if the project has a webpack.config.js in the root.\n    return (\n      this.getConfigModuleIds().reduce<string | null | undefined>(\n        (prev, moduleId) => prev || resolveFrom.silent(this.projectRoot, moduleId),\n        null\n      ) ?? null\n    );\n  }\n\n  async loadConfigAsync(\n    options: BundlerStartOptions,\n    argv?: string[]\n  ): Promise<WebpackConfiguration> {\n    // let bar: ProgressBar | null = null;\n\n    const env = {\n      projectRoot: this.projectRoot,\n      pwa: !!options.isImageEditingEnabled,\n      // TODO: Use a new loader in Webpack config...\n      logger: {\n        info() {},\n      },\n      mode: options.mode,\n      https: options.https,\n    };\n    setMode(env.mode ?? 'development');\n    // Check if the project has a webpack.config.js in the root.\n    const projectWebpackConfig = this.getProjectConfigFilePath();\n    let config: WebpackConfiguration;\n    if (projectWebpackConfig) {\n      const webpackConfig = require(projectWebpackConfig);\n      if (typeof webpackConfig === 'function') {\n        config = await webpackConfig(env, argv);\n      } else {\n        config = webpackConfig;\n      }\n    } else {\n      // Fallback to the default expo webpack config.\n      const loadDefaultConfigAsync = importExpoWebpackConfigFromProject(this.projectRoot);\n      // @ts-expect-error: types appear to be broken\n      config = await loadDefaultConfigAsync(env, argv);\n    }\n    return config;\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./webpack.config.js'];\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nexport function getProjectWebpackConfigFilePath(projectRoot: string) {\n  return resolveFrom.silent(projectRoot, './webpack.config.js');\n}\n\nasync function clearWebProjectCacheAsync(\n  projectRoot: string,\n  mode: string = 'development'\n): Promise<void> {\n  Log.log(chalk.dim(`Clearing Webpack ${mode} cache directory...`));\n\n  const dir = await ensureDotExpoProjectDirectoryInitialized(projectRoot);\n  const cacheFolder = path.join(dir, 'web/cache', mode);\n  try {\n    await fs.promises.rm(cacheFolder, { recursive: true, force: true });\n  } catch (error: any) {\n    Log.error(`Could not clear ${mode} web cache directory: ${error.message}`);\n  }\n}\n"],"names":["getProjectWebpackConfigFilePath","path","Log","assertIsWebpackDevServer","value","sockWrite","CommandError","constructor","name","WebpackBundlerDevServer","BundlerDevServer","broadcastMessage","method","params","instance","server","customMessageSocketBroadcaster","hackyConvertedMessage","sockets","attachNativeDevServerMiddlewareToDevServer","middleware","attachToServer","logger","attachInspectorProxy","LogReporter","messageSocket","debuggerProxy","eventsSocket","broadcast","logReporter","reportEvent","inspectorProxy","projectRoot","isTargetingNative","includes","process","env","EXPO_WEBPACK_PLATFORM","isTargetingWeb","createNativeDevServerMiddleware","port","compiler","options","createDevServerMiddleware","nativeMiddleware","watchFolders","getManifestMiddlewareAsync","use","createSymbolicateMiddleware","getAvailablePortAsync","defaultPort","choosePortAsync","host","WEB_HOST","error","message","startImplementationAsync","config","webpack","importWebpackFromProject","WebpackDevServer","importWebpackDevServerFromProject","stopAsync","resetDevServer","https","mode","urlCreator","getUrlCreator","location","scheme","debug","clearWebProjectCacheAsync","ensureEnvironmentSupportsTLSAsync","catch","loadConfigAsync","log","chalk","devServer","before","originalBefore","bind","app","listen","originalClose","close","callback","err","_host","getIpAddress","protocol","url","getProjectConfigFilePath","getConfigModuleIds","reduce","prev","moduleId","resolveFrom","silent","argv","pwa","isImageEditingEnabled","info","setMode","projectWebpackConfig","webpackConfig","require","loadDefaultConfigAsync","importExpoWebpackConfigFromProject","BABEL_ENV","NODE_ENV","dim","dir","ensureDotExpoProjectDirectoryInitialized","cacheFolder","join","fs","promises","rm","recursive","force"],"mappings":"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"}