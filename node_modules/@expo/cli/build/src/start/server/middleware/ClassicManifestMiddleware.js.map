{"version":3,"sources":["../../../../../src/start/server/middleware/ClassicManifestMiddleware.ts"],"sourcesContent":["import { ExpoAppManifest, ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport os from 'os';\n\nimport { APISettings } from '../../../api/settings';\nimport { signClassicExpoGoManifestAsync } from '../../../api/signManifest';\nimport UserSettings from '../../../api/user/UserSettings';\nimport { ANONYMOUS_USERNAME, getUserAsync } from '../../../api/user/user';\nimport * as Log from '../../../log';\nimport { logEvent } from '../../../utils/analytics/rudderstackClient';\nimport { memoize } from '../../../utils/fn';\nimport { learnMore } from '../../../utils/link';\nimport { stripPort } from '../../../utils/url';\nimport {\n  DEVELOPER_TOOL,\n  HostInfo,\n  ManifestMiddleware,\n  ManifestRequestInfo,\n} from './ManifestMiddleware';\nimport { assertRuntimePlatform, parsePlatformHeader } from './resolvePlatform';\nimport { ServerHeaders, ServerRequest } from './server.types';\n\ntype SignManifestProps = {\n  manifest: ExpoAppManifest;\n  hostId: string;\n  acceptSignature: boolean;\n};\n\ninterface ClassicManifestRequestInfo extends ManifestRequestInfo {}\n\nexport class ClassicManifestMiddleware extends ManifestMiddleware<ClassicManifestRequestInfo> {\n  public getParsedHeaders(req: ServerRequest): ClassicManifestRequestInfo {\n    const platform = parsePlatformHeader(req) || 'ios';\n    assertRuntimePlatform(platform);\n    return {\n      platform,\n      acceptSignature: Boolean(req.headers['exponent-accept-signature']),\n      hostname: stripPort(req.headers['host']),\n    };\n  }\n\n  public async _getManifestResponseAsync({\n    acceptSignature,\n    ...requestOptions\n  }: ClassicManifestRequestInfo): Promise<{\n    body: string;\n    version: string;\n    headers: ServerHeaders;\n  }> {\n    const { exp, hostUri, expoGoConfig, bundleUrl } = await this._resolveProjectSettingsAsync(\n      requestOptions\n    );\n\n    const manifest: ExpoAppManifest = {\n      ...(exp as ExpoAppManifest),\n      ...expoGoConfig,\n      hostUri,\n      bundleUrl,\n    };\n\n    // Gather packager and host info\n    const hostInfo = await createHostInfoAsync();\n\n    const headers = new Map<string, any>();\n    headers.set('Exponent-Server', hostInfo);\n\n    // Create the final string\n    const body = await this._fetchComputedManifestStringAsync({\n      manifest,\n      hostId: hostInfo.host,\n      acceptSignature,\n    });\n\n    return {\n      body,\n      version: manifest.sdkVersion,\n      headers,\n    };\n  }\n\n  protected trackManifest(version?: string) {\n    // Log analytics\n    logEvent('Serve Manifest', {\n      sdkVersion: version ?? null,\n    });\n  }\n\n  /** Exposed for testing. */\n  async _getManifestStringAsync({\n    manifest,\n    hostId,\n    acceptSignature,\n  }: SignManifestProps): Promise<string> {\n    const currentSession = await getUserAsync();\n    if (!currentSession || APISettings.isOffline) {\n      manifest.id = `@${ANONYMOUS_USERNAME}/${manifest.slug}-${hostId}`;\n    }\n    if (!acceptSignature) {\n      return JSON.stringify(manifest);\n    } else if (!currentSession || APISettings.isOffline) {\n      return getUnsignedManifestString(manifest);\n    } else {\n      return this.getSignedManifestStringAsync(manifest);\n    }\n  }\n\n  private getSignedManifestStringAsync = memoize(signClassicExpoGoManifestAsync);\n\n  /** Exposed for testing. */\n  async _fetchComputedManifestStringAsync(props: SignManifestProps): Promise<string> {\n    try {\n      return await this._getManifestStringAsync(props);\n    } catch (error: any) {\n      if (error.code === 'UNAUTHORIZED_ERROR' && props.manifest.owner) {\n        // Don't have permissions for siging, warn and enable offline mode.\n        this.addSigningDisabledWarning(\n          `This project belongs to ${chalk.bold(\n            `@${props.manifest.owner}`\n          )} and you have not been granted the appropriate permissions.\\n` +\n            `Please request access from an admin of @${props.manifest.owner} or change the \"owner\" field to an account you belong to.\\n` +\n            learnMore('https://docs.expo.dev/versions/latest/config/app/#owner')\n        );\n        APISettings.isOffline = true;\n        return await this._getManifestStringAsync(props);\n      } else if (error.code === 'ENOTFOUND') {\n        // Got a DNS error, i.e. can't access exp.host, warn and enable offline mode.\n        this.addSigningDisabledWarning(\n          `Could not reach Expo servers, please check if you can access ${\n            error.hostname || 'exp.host'\n          }.`\n        );\n        APISettings.isOffline = true;\n        return await this._getManifestStringAsync(props);\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private addSigningDisabledWarning = memoize((reason: string) => {\n    Log.warn(`${reason}\\nFalling back to offline mode.`);\n    // For the memo\n    return reason;\n  });\n}\n\n// Passed to Expo Go and registered as telemetry.\n// TODO: it's unclear why we don't just send it from the CLI.\nasync function createHostInfoAsync(): Promise<HostInfo> {\n  return {\n    host: await UserSettings.getAnonymousIdentifierAsync(),\n    server: 'expo',\n    // Defined in the build step\n    serverVersion: process.env.__EXPO_VERSION!,\n    serverDriver: DEVELOPER_TOOL,\n    serverOS: os.platform(),\n    serverOSVersion: os.release(),\n  };\n}\n\nfunction getUnsignedManifestString(manifest: ExpoConfig) {\n  const unsignedManifest = {\n    manifestString: JSON.stringify(manifest),\n    signature: 'UNSIGNED',\n  };\n  return JSON.stringify(unsignedManifest);\n}\n"],"names":["Log","ClassicManifestMiddleware","ManifestMiddleware","getParsedHeaders","req","platform","parsePlatformHeader","assertRuntimePlatform","acceptSignature","Boolean","headers","hostname","stripPort","_getManifestResponseAsync","requestOptions","exp","hostUri","expoGoConfig","bundleUrl","_resolveProjectSettingsAsync","manifest","hostInfo","createHostInfoAsync","Map","set","body","_fetchComputedManifestStringAsync","hostId","host","version","sdkVersion","trackManifest","logEvent","_getManifestStringAsync","currentSession","getUserAsync","APISettings","isOffline","id","ANONYMOUS_USERNAME","slug","JSON","stringify","getUnsignedManifestString","getSignedManifestStringAsync","memoize","signClassicExpoGoManifestAsync","props","error","code","owner","addSigningDisabledWarning","chalk","bold","learnMore","reason","warn","UserSettings","getAnonymousIdentifierAsync","server","serverVersion","process","env","__EXPO_VERSION","serverDriver","DEVELOPER_TOOL","serverOS","os","serverOSVersion","release","unsignedManifest","manifestString","signature"],"mappings":"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"}