{"version":3,"sources":["../../../../../src/start/doctor/web/WebSupportProjectPrerequisite.ts"],"sourcesContent":["import {\n  AppJSONConfig,\n  ExpoConfig,\n  getConfig,\n  getProjectConfigDescriptionWithPaths,\n  ProjectConfig,\n} from '@expo/config';\nimport chalk from 'chalk';\n\nimport * as Log from '../../../log';\nimport { env } from '../../../utils/env';\nimport { PrerequisiteCommandError, ProjectPrerequisite } from '../Prerequisite';\nimport { ensureDependenciesAsync } from '../dependencies/ensureDependenciesAsync';\n\n/** Ensure the project has the required web support settings. */\nexport class WebSupportProjectPrerequisite extends ProjectPrerequisite {\n  /** Ensure a project that hasn't explicitly disabled web support has all the required packages for running in the browser. */\n  async assertImplementation(): Promise<void> {\n    if (env.EXPO_NO_WEB_SETUP) {\n      Log.warn('Skipping web setup: EXPO_NO_WEB_SETUP is enabled.');\n      return;\n    }\n    Log.debug('Ensuring web support is setup');\n\n    const result = await this._shouldSetupWebSupportAsync();\n\n    // Ensure web packages are installed\n    await this._ensureWebDependenciesInstalledAsync({ exp: result.exp });\n  }\n\n  /** Exposed for testing. */\n  async _shouldSetupWebSupportAsync(): Promise<ProjectConfig> {\n    const config = getConfig(this.projectRoot);\n\n    // Detect if the 'web' string is purposefully missing from the platforms array.\n    if (isWebPlatformExcluded(config.rootConfig)) {\n      // Get exact config description with paths.\n      const configName = getProjectConfigDescriptionWithPaths(this.projectRoot, config);\n      throw new PrerequisiteCommandError(\n        'WEB_SUPPORT',\n        chalk`Skipping web setup: {bold \"web\"} is not included in the project ${configName} {bold \"platforms\"} array.`\n      );\n    }\n\n    return config;\n  }\n\n  /** Exposed for testing. */\n  async _ensureWebDependenciesInstalledAsync({ exp }: { exp: ExpoConfig }): Promise<boolean> {\n    try {\n      return await ensureDependenciesAsync(this.projectRoot, {\n        exp,\n        installMessage: `It looks like you're trying to use web support but don't have the required dependencies installed.`,\n        warningMessage: chalk`If you're not using web, please remove the {bold \"web\"} string from the platforms array in the project Expo config.`,\n        requiredPackages: [\n          // use react-native-web/package.json to skip node module cache issues when the user installs\n          // the package and attempts to resolve the module in the same process.\n          { file: 'react-native-web/package.json', pkg: 'react-native-web', version: '~0.17.1' },\n          { file: 'react-dom/package.json', pkg: 'react-dom', version: '^17.0.1' },\n          // `webpack` and `webpack-dev-server` should be installed in the `@expo/webpack-config`\n          // package, but just in case we'll do the check now.\n          {\n            file: 'webpack-dev-server/package.json',\n            // https://github.com/expo/expo-cli/pull/4282\n            pkg: 'webpack-dev-server',\n            version: '~3.11.0',\n            dev: true,\n          },\n          {\n            file: '@expo/webpack-config/package.json',\n            pkg: '@expo/webpack-config',\n            version: '~0.16.2',\n            dev: true,\n          },\n        ],\n      });\n    } catch (error) {\n      // Reset the cached check so we can re-run the check if the user re-runs the command by pressing 'w' in the Terminal UI.\n      this.resetAssertion();\n      throw error;\n    }\n  }\n}\n\n/** Return `true` if the `web` platform is purposefully excluded from the project Expo config. */\nexport function isWebPlatformExcluded(rootConfig: AppJSONConfig): boolean {\n  // Detect if the 'web' string is purposefully missing from the platforms array.\n  const isWebExcluded =\n    Array.isArray(rootConfig.expo?.platforms) &&\n    !!rootConfig.expo?.platforms.length &&\n    !rootConfig.expo?.platforms.includes('web');\n  return isWebExcluded;\n}\n"],"names":["isWebPlatformExcluded","Log","WebSupportProjectPrerequisite","ProjectPrerequisite","assertImplementation","env","EXPO_NO_WEB_SETUP","warn","debug","result","_shouldSetupWebSupportAsync","_ensureWebDependenciesInstalledAsync","exp","config","getConfig","projectRoot","rootConfig","configName","getProjectConfigDescriptionWithPaths","PrerequisiteCommandError","chalk","ensureDependenciesAsync","installMessage","warningMessage","requiredPackages","file","pkg","version","dev","error","resetAssertion","isWebExcluded","Array","isArray","expo","platforms","length","includes"],"mappings":"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"}