{"version":3,"sources":["../../../src/start/startAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport * as Log from '../log';\nimport getDevClientProperties from '../utils/analytics/getDevClientProperties';\nimport { logEvent } from '../utils/analytics/rudderstackClient';\nimport { env } from '../utils/env';\nimport { installExitHooks } from '../utils/exit';\nimport { profile } from '../utils/profile';\nimport { validateDependenciesVersionsAsync } from './doctor/dependencies/validateDependenciesVersions';\nimport { TypeScriptProjectPrerequisite } from './doctor/typescript/TypeScriptProjectPrerequisite';\nimport { WebSupportProjectPrerequisite } from './doctor/web/WebSupportProjectPrerequisite';\nimport { startInterfaceAsync } from './interface/startInterface';\nimport { Options, resolvePortsAsync } from './resolveOptions';\nimport { BundlerStartOptions } from './server/BundlerDevServer';\nimport { DevServerManager, MultiBundlerStartOptions } from './server/DevServerManager';\nimport { openPlatformsAsync } from './server/openPlatforms';\n\nasync function getMultiBundlerStartOptions(\n  projectRoot: string,\n  { forceManifestType, ...options }: Options,\n  settings: { webOnly?: boolean }\n): Promise<[BundlerStartOptions, MultiBundlerStartOptions]> {\n  const commonOptions: BundlerStartOptions = {\n    mode: options.dev ? 'development' : 'production',\n    devClient: options.devClient,\n    forceManifestType,\n    privateKeyPath: options.privateKeyPath ?? undefined,\n    https: options.https,\n    maxWorkers: options.maxWorkers,\n    resetDevServer: options.clear,\n    minify: options.minify,\n    location: {\n      hostType: options.host,\n      scheme: options.scheme,\n    },\n  };\n  const multiBundlerSettings = await resolvePortsAsync(projectRoot, options, settings);\n\n  const multiBundlerStartOptions: MultiBundlerStartOptions = [];\n\n  if (options.web || settings.webOnly) {\n    multiBundlerStartOptions.push({\n      type: 'webpack',\n      options: {\n        ...commonOptions,\n        port: multiBundlerSettings.webpackPort,\n      },\n    });\n  }\n\n  if (!settings.webOnly) {\n    multiBundlerStartOptions.push({\n      type: 'metro',\n      options: {\n        ...commonOptions,\n        port: multiBundlerSettings.metroPort,\n      },\n    });\n  }\n\n  return [commonOptions, multiBundlerStartOptions];\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: Options,\n  settings: { webOnly?: boolean }\n) {\n  Log.log(chalk.gray(`Starting project at ${projectRoot}`));\n\n  const { exp, pkg } = profile(getConfig)(projectRoot);\n\n  if (!options.forceManifestType) {\n    const easUpdatesUrlRegex = /^https:\\/\\/(staging-)?u\\.expo\\.dev/;\n    const isEasUpdatesUrl = exp.updates?.url ? easUpdatesUrlRegex.test(exp.updates.url) : false;\n    options.forceManifestType = isEasUpdatesUrl ? 'expo-updates' : 'classic';\n  }\n\n  const [defaultOptions, startOptions] = await getMultiBundlerStartOptions(\n    projectRoot,\n    options,\n    settings\n  );\n\n  const devServerManager = new DevServerManager(projectRoot, defaultOptions);\n\n  // Validations\n\n  if (options.web || settings.webOnly) {\n    await devServerManager.ensureProjectPrerequisiteAsync(WebSupportProjectPrerequisite);\n  }\n\n  await devServerManager.ensureProjectPrerequisiteAsync(TypeScriptProjectPrerequisite);\n\n  if (!settings.webOnly && !options.devClient) {\n    await profile(validateDependenciesVersionsAsync)(projectRoot, exp, pkg);\n  }\n\n  // Some tracking thing\n\n  if (options.devClient) {\n    track(projectRoot, exp);\n  }\n\n  await profile(devServerManager.startAsync.bind(devServerManager))(startOptions);\n\n  // Open project on devices.\n  await profile(openPlatformsAsync)(devServerManager, options);\n\n  // Present the Terminal UI.\n  if (!env.CI) {\n    await profile(startInterfaceAsync)(devServerManager, {\n      platforms: exp.platforms ?? ['ios', 'android', 'web'],\n    });\n  } else {\n    // Display the server location in CI...\n    const url = devServerManager.getDefaultDevServer()?.getDevServerUrl();\n    if (url) {\n      Log.log(chalk`Waiting on {underline ${url}}`);\n    }\n  }\n\n  // Final note about closing the server.\n  const logLocation = settings.webOnly ? 'in the browser console' : 'below';\n  Log.log(\n    chalk`Logs for your project will appear ${logLocation}.${\n      env.CI ? '' : chalk.dim(` Press Ctrl+C to exit.`)\n    }`\n  );\n}\n\nfunction track(projectRoot: string, exp: ExpoConfig) {\n  logEvent('dev client start command', {\n    status: 'started',\n    ...getDevClientProperties(projectRoot, exp),\n  });\n  installExitHooks(() => {\n    logEvent('dev client start command', {\n      status: 'finished',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n    // UnifiedAnalytics.flush();\n  });\n}\n"],"names":["startAsync","Log","getMultiBundlerStartOptions","projectRoot","forceManifestType","options","settings","commonOptions","mode","dev","devClient","privateKeyPath","undefined","https","maxWorkers","resetDevServer","clear","minify","location","hostType","host","scheme","multiBundlerSettings","resolvePortsAsync","multiBundlerStartOptions","web","webOnly","push","type","port","webpackPort","metroPort","log","chalk","gray","exp","pkg","profile","getConfig","easUpdatesUrlRegex","isEasUpdatesUrl","updates","url","test","defaultOptions","startOptions","devServerManager","DevServerManager","ensureProjectPrerequisiteAsync","WebSupportProjectPrerequisite","TypeScriptProjectPrerequisite","validateDependenciesVersionsAsync","track","bind","openPlatformsAsync","env","CI","startInterfaceAsync","platforms","getDefaultDevServer","getDevServerUrl","logLocation","dim","logEvent","status","getDevClientProperties","installExitHooks"],"mappings":"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"}