{"version":3,"sources":["../../../../src/start/platforms/DeviceManager.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport * as Log from '../../log';\n\n/** An abstract class for interacting with a native device. */\nexport abstract class DeviceManager<IDevice> {\n  constructor(public device: IDevice) {}\n\n  abstract get name(): string;\n\n  abstract get identifier(): string;\n\n  logOpeningUrl(url: string) {\n    Log.log(chalk`\\u203A Opening {underline ${url}} on {bold ${this.name}}`);\n  }\n\n  abstract startAsync(): Promise<IDevice>;\n\n  abstract getAppVersionAsync(applicationId: string): Promise<string | null>;\n\n  abstract installAppAsync(binaryPath: string): Promise<void>;\n\n  abstract uninstallAppAsync(applicationId: string): Promise<void>;\n\n  abstract isAppInstalledAsync(applicationId: string): Promise<boolean>;\n\n  abstract openUrlAsync(url: string): Promise<void>;\n\n  abstract activateWindowAsync(): Promise<void>;\n\n  abstract ensureExpoGoAsync(sdkVersion?: string): Promise<boolean>;\n}\n"],"names":["Log","DeviceManager","constructor","device","logOpeningUrl","url","log","chalk","name"],"mappings":"AAAA;;;;AAAkB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAEbA,IAAAA,GAAG,mCAAM,WAAW,EAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGR,MAAeC,aAAa;IACjCC,YAAmBC,MAAe,CAAE;aAAjBA,MAAe,GAAfA,MAAe;KAAI;IAMtCC,aAAa,CAACC,GAAW,EAAE;QACzBL,GAAG,CAACM,GAAG,CAACC,MAAK,QAAA,CAAC,0BAA0B,EAAEF,GAAG,CAAC,WAAW,EAAE,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1E;CAiBF;QA1BqBP,aAAa,GAAbA,aAAa"}