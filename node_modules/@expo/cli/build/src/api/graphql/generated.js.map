{"version":3,"sources":["../../../../src/api/graphql/generated.ts"],"sourcesContent":["/**\n * This file was generated using GraphQL Codegen\n * Command: yarn generate-graphql-code\n * Run this during development for automatic type generation when editing GraphQL documents\n * For more info and docs, visit https://graphql-code-generator.com/\n */\n\ntype Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\ntype Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** Date custom scalar type */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSONObject: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\ntype Update = ActivityTimelineProjectActivity & {\n  __typename?: 'Update';\n  id: Scalars['ID'];\n  actor?: Maybe<Actor>;\n  activityTimestamp: Scalars['DateTime'];\n  branchId: Scalars['ID'];\n  platform: Scalars['String'];\n  manifestFragment: Scalars['String'];\n  runtimeVersion: Scalars['String'];\n  group: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n  createdAt: Scalars['DateTime'];\n  message?: Maybe<Scalars['String']>;\n  branch: UpdateBranch;\n  manifestPermalink: Scalars['String'];\n};\n\ntype ActivityTimelineProjectActivity = {\n  id: Scalars['ID'];\n  actor?: Maybe<Actor>;\n  activityTimestamp: Scalars['DateTime'];\n};\n\n/** A user or robot that can authenticate with Expo services and be a member of accounts. */\ntype Actor = {\n  id: Scalars['ID'];\n  firstName?: Maybe<Scalars['String']>;\n  created: Scalars['DateTime'];\n  isExpoAdmin: Scalars['Boolean'];\n  /**\n   * Best-effort human readable name for this actor for use in user interfaces during action attribution.\n   * For example, when displaying a sentence indicating that actor X created a build or published an update.\n   */\n  displayName: Scalars['String'];\n  /** Associated accounts */\n  accounts: Array<Account>;\n  /** Access Tokens belonging to this actor */\n  accessTokens: Array<AccessToken>;\n  /**\n   * Server feature gate values for this actor, optionally filtering by desired gates.\n   * Only resolves for the viewer.\n   */\n  featureGates: Scalars['JSONObject'];\n};\n\n/**\n * An account is a container owning projects, credentials, billing and other organization\n * data and settings. Actors may own and be members of accounts.\n */\ntype Account = {\n  __typename?: 'Account';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  isCurrent: Scalars['Boolean'];\n  pushSecurityEnabled: Scalars['Boolean'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  /** Offers set on this account */\n  offers?: Maybe<Array<Offer>>;\n  /** Apps associated with this account */\n  apps: Array<App>;\n  appCount: Scalars['Int'];\n  /** Build Jobs associated with this account */\n  buildJobs: Array<BuildJob>;\n  /**\n   * Coalesced Build (EAS) or BuildJob (Classic) for all apps belonging to this account.\n   * @deprecated Use activityTimelineProjectActivities with filterTypes instead\n   */\n  buildOrBuildJobs: Array<BuildOrBuildJob>;\n  /** Coalesced project activity for all apps belonging to this account. */\n  activityTimelineProjectActivities: Array<ActivityTimelineProjectActivity>;\n  /** Owning User of this account if personal account */\n  owner?: Maybe<User>;\n  /** Actors associated with this account and permissions they hold */\n  users: Array<UserPermission>;\n  /** Pending user invitations for this account */\n  userInvitations: Array<UserInvitation>;\n  /** iOS credentials for account */\n  appleTeams: Array<AppleTeam>;\n  appleAppIdentifiers: Array<AppleAppIdentifier>;\n  appleDistributionCertificates: Array<AppleDistributionCertificate>;\n  applePushKeys: Array<ApplePushKey>;\n  appleProvisioningProfiles: Array<AppleProvisioningProfile>;\n  appleDevices: Array<AppleDevice>;\n  appStoreConnectApiKeys: Array<AppStoreConnectApiKey>;\n  /** Android credentials for account */\n  googleServiceAccountKeys: Array<GoogleServiceAccountKey>;\n  /** Environment secrets for an account */\n  environmentSecrets: Array<EnvironmentSecret>;\n  /** @deprecated Legacy access tokens are deprecated */\n  accessTokens: Array<Maybe<AccessToken>>;\n  /** @deprecated Legacy access tokens are deprecated */\n  requiresAccessTokenForPushSecurity: Scalars['Boolean'];\n  /** @deprecated See isCurrent */\n  unlimitedBuilds: Scalars['Boolean'];\n  /** @deprecated Build packs are no longer supported */\n  availableBuilds?: Maybe<Scalars['Int']>;\n  /** @deprecated No longer needed */\n  subscriptionChangesPending?: Maybe<Scalars['Boolean']>;\n  /** @deprecated Build packs are no longer supported */\n  willAutoRenewBuilds?: Maybe<Scalars['Boolean']>;\n};\n\ntype Offer = {\n  __typename?: 'Offer';\n  id: Scalars['ID'];\n  stripeId: Scalars['ID'];\n  price: Scalars['Int'];\n  quantity?: Maybe<Scalars['Int']>;\n  trialLength?: Maybe<Scalars['Int']>;\n  type: OfferType;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  prerequisite?: Maybe<OfferPrerequisite>;\n};\n\nenum OfferType {\n  /** Term subscription */\n  Subscription = 'SUBSCRIPTION',\n  /** Advanced Purchase of Paid Resource */\n  Prepaid = 'PREPAID',\n  /** Addon, or supplementary subscription */\n  Addon = 'ADDON',\n}\n\nenum Feature {\n  /** Top Tier Support */\n  Support = 'SUPPORT',\n  /** Share access to projects */\n  Teams = 'TEAMS',\n  /** Priority Builds */\n  Builds = 'BUILDS',\n  /** Funds support for open source development */\n  OpenSource = 'OPEN_SOURCE',\n}\n\ntype OfferPrerequisite = {\n  __typename?: 'OfferPrerequisite';\n  type: Scalars['String'];\n  stripeIds: Array<Scalars['String']>;\n};\n\ntype Project = {\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  fullName: Scalars['String'];\n  description: Scalars['String'];\n  slug: Scalars['String'];\n  updated: Scalars['DateTime'];\n  published: Scalars['Boolean'];\n  username: Scalars['String'];\n  /** @deprecated Field no longer supported */\n  iconUrl?: Maybe<Scalars['String']>;\n};\n\n/** Represents an Exponent App (or Experience in legacy terms) */\ntype App = Project & {\n  __typename?: 'App';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  fullName: Scalars['String'];\n  description: Scalars['String'];\n  slug: Scalars['String'];\n  ownerAccount: Account;\n  privacySetting: AppPrivacy;\n  pushSecurityEnabled: Scalars['Boolean'];\n  /** Whether there have been any classic update publishes */\n  published: Scalars['Boolean'];\n  /** Time of last classic update publish */\n  updated: Scalars['DateTime'];\n  /** ID of latest classic update release */\n  latestReleaseId: Scalars['ID'];\n  /** Whether the latest classic update publish is using a deprecated SDK version */\n  isDeprecated: Scalars['Boolean'];\n  /** SDK version of the latest classic update publish, 0.0.0 otherwise */\n  sdkVersion: Scalars['String'];\n  /** Classic update release channel names (to be removed) */\n  releaseChannels: Array<Scalars['String']>;\n  /** Classic update release channel names that have at least one build */\n  buildsReleaseChannels: Array<Scalars['String']>;\n  /** githubUrl field from most recent classic update manifest */\n  githubUrl?: Maybe<Scalars['String']>;\n  /** android.playStoreUrl field from most recent classic update manifest */\n  playStoreUrl?: Maybe<Scalars['String']>;\n  /** ios.appStoreUrl field from most recent classic update manifest */\n  appStoreUrl?: Maybe<Scalars['String']>;\n  /** Info about the icon specified in the most recent classic update manifest */\n  icon?: Maybe<AppIcon>;\n  /** iOS app credentials for the project */\n  iosAppCredentials: Array<IosAppCredentials>;\n  /** Android app credentials for the project */\n  androidAppCredentials: Array<AndroidAppCredentials>;\n  /** Coalesced project activity for an app */\n  activityTimelineProjectActivities: Array<ActivityTimelineProjectActivity>;\n  /** Environment secrets for an app */\n  environmentSecrets: Array<EnvironmentSecret>;\n  /** Webhooks for an app */\n  webhooks: Array<Webhook>;\n  /** @deprecated Use ownerAccount.name instead */\n  username: Scalars['String'];\n  /** @deprecated Field no longer supported */\n  iconUrl?: Maybe<Scalars['String']>;\n  /** @deprecated Use 'privacySetting' instead. */\n  privacy: Scalars['String'];\n  /** @deprecated Field no longer supported */\n  lastPublishedTime: Scalars['DateTime'];\n  /** @deprecated Field no longer supported */\n  packageUsername: Scalars['String'];\n  /** @deprecated Field no longer supported */\n  packageName: Scalars['String'];\n  /** @deprecated Legacy access tokens are deprecated */\n  accessTokens: Array<Maybe<AccessToken>>;\n  /** @deprecated Legacy access tokens are deprecated */\n  requiresAccessTokenForPushSecurity: Scalars['Boolean'];\n  /** @deprecated 'likes' have been deprecated. */\n  isLikedByMe: Scalars['Boolean'];\n  /** @deprecated 'likes' have been deprecated. */\n  likeCount: Scalars['Int'];\n  /** @deprecated 'likes' have been deprecated. */\n  trendScore: Scalars['Float'];\n  /** @deprecated 'likes' have been deprecated. */\n  likedBy: Array<Maybe<User>>;\n  /** @deprecated Field no longer supported */\n  users?: Maybe<Array<Maybe<User>>>;\n  /** @deprecated Field no longer supported */\n  releases: Array<Maybe<AppRelease>>;\n  latestReleaseForReleaseChannel?: Maybe<AppRelease>;\n};\n\nenum AppPrivacy {\n  Public = 'PUBLIC',\n  Unlisted = 'UNLISTED',\n  Hidden = 'HIDDEN',\n}\n\ntype AppIcon = {\n  __typename?: 'AppIcon';\n  url: Scalars['String'];\n  primaryColor?: Maybe<Scalars['String']>;\n  originalUrl: Scalars['String'];\n  /** Nullable color palette of the app icon. If null, color palette couldn't be retrieved from external service (imgix) */\n  colorPalette?: Maybe<Scalars['JSON']>;\n};\n\nenum AppPlatform {\n  Ios = 'IOS',\n  Android = 'ANDROID',\n}\n\ntype BuildOrBuildJob = {\n  id: Scalars['ID'];\n};\n\n/** Represents a human (not robot) actor. */\ntype User = Actor & {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  fullName?: Maybe<Scalars['String']>;\n  profilePhoto: Scalars['String'];\n  created: Scalars['DateTime'];\n  industry?: Maybe<Scalars['String']>;\n  location?: Maybe<Scalars['String']>;\n  appCount: Scalars['Int'];\n  githubUsername?: Maybe<Scalars['String']>;\n  twitterUsername?: Maybe<Scalars['String']>;\n  appetizeCode?: Maybe<Scalars['String']>;\n  emailVerified: Scalars['Boolean'];\n  isExpoAdmin: Scalars['Boolean'];\n  displayName: Scalars['String'];\n  isSecondFactorAuthenticationEnabled: Scalars['Boolean'];\n  /** Get all certified second factor authentication methods */\n  secondFactorDevices: Array<UserSecondFactorDevice>;\n  /** Associated accounts */\n  primaryAccount: Account;\n  accounts: Array<Account>;\n  /** Access Tokens belonging to this actor */\n  accessTokens: Array<AccessToken>;\n  /** Apps this user has published */\n  apps: Array<App>;\n  /** Whether this user has any pending user invitations. Only resolves for the viewer. */\n  hasPendingUserInvitations: Scalars['Boolean'];\n  /** Pending UserInvitations for this user. Only resolves for the viewer. */\n  pendingUserInvitations: Array<UserInvitation>;\n  /** Coalesced project activity for all apps belonging to all accounts this user belongs to. Only resolves for the viewer. */\n  activityTimelineProjectActivities: Array<ActivityTimelineProjectActivity>;\n  /**\n   * Server feature gate values for this actor, optionally filtering by desired gates.\n   * Only resolves for the viewer.\n   */\n  featureGates: Scalars['JSONObject'];\n  /** @deprecated Field no longer supported */\n  isEmailUnsubscribed: Scalars['Boolean'];\n  /** @deprecated Field no longer supported */\n  lastPasswordReset?: Maybe<Scalars['DateTime']>;\n  /** @deprecated Field no longer supported */\n  lastLogin?: Maybe<Scalars['DateTime']>;\n  /** @deprecated Field no longer supported */\n  isOnboarded?: Maybe<Scalars['Boolean']>;\n  /** @deprecated Field no longer supported */\n  isLegacy?: Maybe<Scalars['Boolean']>;\n  /** @deprecated Field no longer supported */\n  wasLegacy?: Maybe<Scalars['Boolean']>;\n  /** @deprecated 'likes' have been deprecated. */\n  likes?: Maybe<Array<Maybe<App>>>;\n};\n\n/** A second factor device belonging to a User */\ntype UserSecondFactorDevice = {\n  __typename?: 'UserSecondFactorDevice';\n  id: Scalars['ID'];\n  user: User;\n  name: Scalars['String'];\n  isCertified: Scalars['Boolean'];\n  isPrimary: Scalars['Boolean'];\n  smsPhoneNumber?: Maybe<Scalars['String']>;\n  method: SecondFactorMethod;\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nenum SecondFactorMethod {\n  /** Google Authenticator (TOTP) */\n  Authenticator = 'AUTHENTICATOR',\n  /** SMS */\n  Sms = 'SMS',\n}\n\n/** A method of authentication for an Actor */\ntype AccessToken = {\n  __typename?: 'AccessToken';\n  id: Scalars['ID'];\n  visibleTokenPrefix: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  revokedAt?: Maybe<Scalars['DateTime']>;\n  lastUsedAt?: Maybe<Scalars['DateTime']>;\n  owner: Actor;\n  note?: Maybe<Scalars['String']>;\n};\n\n/** An pending invitation sent to an email granting membership on an Account. */\ntype UserInvitation = {\n  __typename?: 'UserInvitation';\n  id: Scalars['ID'];\n  /** Email to which this invitation was sent */\n  email: Scalars['String'];\n  created: Scalars['DateTime'];\n  accountName: Scalars['String'];\n  /** Account permissions to be granted upon acceptance of this invitation */\n  permissions: Array<Permission>;\n  /** Role to be granted upon acceptance of this invitation */\n  role: Role;\n};\n\nenum Permission {\n  Own = 'OWN',\n  Admin = 'ADMIN',\n  Publish = 'PUBLISH',\n  View = 'VIEW',\n}\n\nenum Role {\n  Owner = 'OWNER',\n  Admin = 'ADMIN',\n  Developer = 'DEVELOPER',\n  ViewOnly = 'VIEW_ONLY',\n  Custom = 'CUSTOM',\n  HasAdmin = 'HAS_ADMIN',\n  NotAdmin = 'NOT_ADMIN',\n}\n\n/** Represents an Standalone App build job */\ntype BuildJob = ActivityTimelineProjectActivity &\n  BuildOrBuildJob & {\n    __typename?: 'BuildJob';\n    id: Scalars['ID'];\n    actor?: Maybe<Actor>;\n    activityTimestamp: Scalars['DateTime'];\n    app?: Maybe<App>;\n    user?: Maybe<User>;\n    release?: Maybe<AppRelease>;\n    config?: Maybe<Scalars['JSON']>;\n    artifacts?: Maybe<BuildArtifact>;\n    logs?: Maybe<BuildLogs>;\n    created?: Maybe<Scalars['DateTime']>;\n    updated?: Maybe<Scalars['DateTime']>;\n    fullExperienceName?: Maybe<Scalars['String']>;\n    status?: Maybe<BuildJobStatus>;\n    expirationDate?: Maybe<Scalars['DateTime']>;\n    platform: AppPlatform;\n    sdkVersion?: Maybe<Scalars['String']>;\n    releaseChannel?: Maybe<Scalars['String']>;\n  };\n\ntype AppRelease = {\n  __typename?: 'AppRelease';\n  id: Scalars['ID'];\n  hash: Scalars['String'];\n  publishedTime: Scalars['DateTime'];\n  publishingUsername: Scalars['String'];\n  sdkVersion: Scalars['String'];\n  runtimeVersion?: Maybe<Scalars['String']>;\n  version: Scalars['String'];\n  s3Key: Scalars['String'];\n  s3Url: Scalars['String'];\n  manifest: Scalars['JSON'];\n};\n\ntype BuildArtifact = {\n  __typename?: 'BuildArtifact';\n  url: Scalars['String'];\n  manifestPlistUrl?: Maybe<Scalars['String']>;\n};\n\ntype BuildLogs = {\n  __typename?: 'BuildLogs';\n  url?: Maybe<Scalars['String']>;\n  format?: Maybe<BuildJobLogsFormat>;\n};\n\nenum BuildJobLogsFormat {\n  Raw = 'RAW',\n  Json = 'JSON',\n}\n\nenum BuildJobStatus {\n  Pending = 'PENDING',\n  Started = 'STARTED',\n  InProgress = 'IN_PROGRESS',\n  Errored = 'ERRORED',\n  Finished = 'FINISHED',\n  SentToQueue = 'SENT_TO_QUEUE',\n}\n\ntype UpdateBranch = {\n  __typename?: 'UpdateBranch';\n  id: Scalars['ID'];\n  appId: Scalars['ID'];\n  name: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  updates: Array<Update>;\n};\n\ntype IosAppCredentials = {\n  __typename?: 'IosAppCredentials';\n  id: Scalars['ID'];\n  app: App;\n  appleTeam?: Maybe<AppleTeam>;\n  appleAppIdentifier: AppleAppIdentifier;\n  iosAppBuildCredentialsList: Array<IosAppBuildCredentials>;\n  pushKey?: Maybe<ApplePushKey>;\n  appStoreConnectApiKeyForSubmissions?: Maybe<AppStoreConnectApiKey>;\n  /** @deprecated use iosAppBuildCredentialsList instead */\n  iosAppBuildCredentialsArray: Array<IosAppBuildCredentials>;\n};\n\ntype AppleTeam = {\n  __typename?: 'AppleTeam';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeamIdentifier: Scalars['String'];\n  appleTeamName?: Maybe<Scalars['String']>;\n  appleAppIdentifiers: Array<AppleAppIdentifier>;\n  appleDistributionCertificates: Array<AppleDistributionCertificate>;\n  applePushKeys: Array<ApplePushKey>;\n  appleProvisioningProfiles: Array<AppleProvisioningProfile>;\n  appleDevices: Array<AppleDevice>;\n};\n\ntype AppleAppIdentifier = {\n  __typename?: 'AppleAppIdentifier';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeam?: Maybe<AppleTeam>;\n  bundleIdentifier: Scalars['String'];\n  parentAppleAppIdentifier?: Maybe<AppleAppIdentifier>;\n};\n\ntype AppleDistributionCertificate = {\n  __typename?: 'AppleDistributionCertificate';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeam?: Maybe<AppleTeam>;\n  serialNumber: Scalars['String'];\n  validityNotBefore: Scalars['DateTime'];\n  validityNotAfter: Scalars['DateTime'];\n  developerPortalIdentifier?: Maybe<Scalars['String']>;\n  certificateP12?: Maybe<Scalars['String']>;\n  certificatePassword?: Maybe<Scalars['String']>;\n  certificatePrivateSigningKey?: Maybe<Scalars['String']>;\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  iosAppBuildCredentialsList: Array<IosAppBuildCredentials>;\n};\n\ntype IosAppBuildCredentials = {\n  __typename?: 'IosAppBuildCredentials';\n  id: Scalars['ID'];\n  distributionCertificate?: Maybe<AppleDistributionCertificate>;\n  provisioningProfile?: Maybe<AppleProvisioningProfile>;\n  iosDistributionType: IosDistributionType;\n  iosAppCredentials: IosAppCredentials;\n  /** @deprecated Get Apple Devices from AppleProvisioningProfile instead */\n  appleDevices?: Maybe<Array<Maybe<AppleDevice>>>;\n};\n\ntype AppleProvisioningProfile = {\n  __typename?: 'AppleProvisioningProfile';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeam?: Maybe<AppleTeam>;\n  expiration: Scalars['DateTime'];\n  appleAppIdentifier: AppleAppIdentifier;\n  developerPortalIdentifier?: Maybe<Scalars['String']>;\n  provisioningProfile?: Maybe<Scalars['String']>;\n  appleUUID: Scalars['String'];\n  status: Scalars['String'];\n  appleDevices: Array<AppleDevice>;\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\ntype AppleDevice = {\n  __typename?: 'AppleDevice';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeam: AppleTeam;\n  identifier: Scalars['String'];\n  name?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  deviceClass?: Maybe<AppleDeviceClass>;\n  softwareVersion?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n};\n\nenum AppleDeviceClass {\n  Ipad = 'IPAD',\n  Iphone = 'IPHONE',\n}\n\nenum IosDistributionType {\n  AppStore = 'APP_STORE',\n  Enterprise = 'ENTERPRISE',\n  AdHoc = 'AD_HOC',\n  Development = 'DEVELOPMENT',\n}\n\ntype ApplePushKey = {\n  __typename?: 'ApplePushKey';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeam?: Maybe<AppleTeam>;\n  keyIdentifier: Scalars['String'];\n  keyP8: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  iosAppCredentialsList: Array<IosAppCredentials>;\n};\n\ntype AppStoreConnectApiKey = {\n  __typename?: 'AppStoreConnectApiKey';\n  id: Scalars['ID'];\n  account: Account;\n  appleTeam?: Maybe<AppleTeam>;\n  issuerIdentifier: Scalars['String'];\n  keyIdentifier: Scalars['String'];\n  name?: Maybe<Scalars['String']>;\n  roles?: Maybe<Array<AppStoreConnectUserRole>>;\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nenum AppStoreConnectUserRole {\n  Admin = 'ADMIN',\n  Finance = 'FINANCE',\n  Technical = 'TECHNICAL',\n  AccountHolder = 'ACCOUNT_HOLDER',\n  ReadOnly = 'READ_ONLY',\n  Sales = 'SALES',\n  Marketing = 'MARKETING',\n  AppManager = 'APP_MANAGER',\n  Developer = 'DEVELOPER',\n  AccessToReports = 'ACCESS_TO_REPORTS',\n  CustomerSupport = 'CUSTOMER_SUPPORT',\n  CreateApps = 'CREATE_APPS',\n  CloudManagedDeveloperId = 'CLOUD_MANAGED_DEVELOPER_ID',\n  CloudManagedAppDistribution = 'CLOUD_MANAGED_APP_DISTRIBUTION',\n  ImageManager = 'IMAGE_MANAGER',\n  Unknown = 'UNKNOWN',\n}\n\ntype AndroidAppCredentials = {\n  __typename?: 'AndroidAppCredentials';\n  id: Scalars['ID'];\n  app: App;\n  applicationIdentifier?: Maybe<Scalars['String']>;\n  androidFcm?: Maybe<AndroidFcm>;\n  googleServiceAccountKeyForSubmissions?: Maybe<GoogleServiceAccountKey>;\n  androidAppBuildCredentialsList: Array<AndroidAppBuildCredentials>;\n  isLegacy: Scalars['Boolean'];\n  /** @deprecated use androidAppBuildCredentialsList instead */\n  androidAppBuildCredentialsArray: Array<AndroidAppBuildCredentials>;\n};\n\ntype AndroidFcm = {\n  __typename?: 'AndroidFcm';\n  id: Scalars['ID'];\n  account: Account;\n  snippet: FcmSnippet;\n  /**\n   * Legacy FCM: returns the Cloud Messaging token, parses to a String\n   * FCM v1: returns the Service Account Key file, parses to an Object\n   */\n  credential: Scalars['JSON'];\n  version: AndroidFcmVersion;\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\ntype FcmSnippet = FcmSnippetLegacy | FcmSnippetV1;\n\ntype FcmSnippetLegacy = {\n  __typename?: 'FcmSnippetLegacy';\n  firstFourCharacters: Scalars['String'];\n  lastFourCharacters: Scalars['String'];\n};\n\ntype FcmSnippetV1 = {\n  __typename?: 'FcmSnippetV1';\n  projectId: Scalars['String'];\n  keyId: Scalars['String'];\n  serviceAccountEmail: Scalars['String'];\n  clientId?: Maybe<Scalars['String']>;\n};\n\nenum AndroidFcmVersion {\n  Legacy = 'LEGACY',\n  V1 = 'V1',\n}\n\ntype GoogleServiceAccountKey = {\n  __typename?: 'GoogleServiceAccountKey';\n  id: Scalars['ID'];\n  account: Account;\n  projectIdentifier: Scalars['String'];\n  privateKeyIdentifier: Scalars['String'];\n  clientEmail: Scalars['String'];\n  clientIdentifier: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\ntype AndroidAppBuildCredentials = {\n  __typename?: 'AndroidAppBuildCredentials';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  androidKeystore?: Maybe<AndroidKeystore>;\n  isDefault: Scalars['Boolean'];\n  isLegacy: Scalars['Boolean'];\n};\n\ntype AndroidKeystore = {\n  __typename?: 'AndroidKeystore';\n  id: Scalars['ID'];\n  account: Account;\n  type: AndroidKeystoreType;\n  keystore: Scalars['String'];\n  keystorePassword: Scalars['String'];\n  keyAlias: Scalars['String'];\n  keyPassword?: Maybe<Scalars['String']>;\n  md5CertificateFingerprint?: Maybe<Scalars['String']>;\n  sha1CertificateFingerprint?: Maybe<Scalars['String']>;\n  sha256CertificateFingerprint?: Maybe<Scalars['String']>;\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nenum AndroidKeystoreType {\n  Jks = 'JKS',\n  Pkcs12 = 'PKCS12',\n  Unknown = 'UNKNOWN',\n}\n\ntype EnvironmentSecret = {\n  __typename?: 'EnvironmentSecret';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nenum WebhookType {\n  Build = 'BUILD',\n  Submit = 'SUBMIT',\n}\n\ntype Webhook = {\n  __typename?: 'Webhook';\n  id: Scalars['ID'];\n  appId: Scalars['ID'];\n  event: WebhookType;\n  url: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\ntype UserPermission = {\n  __typename?: 'UserPermission';\n  permissions: Array<Permission>;\n  role?: Maybe<Role>;\n  /** @deprecated User type is deprecated */\n  user?: Maybe<User>;\n  actor: Actor;\n};\n\n/** Represents a robot (not human) actor. */\ntype Robot = Actor & {\n  __typename?: 'Robot';\n  id: Scalars['ID'];\n  firstName?: Maybe<Scalars['String']>;\n  created: Scalars['DateTime'];\n  isExpoAdmin: Scalars['Boolean'];\n  displayName: Scalars['String'];\n  /** Associated accounts */\n  accounts: Array<Account>;\n  /** Access Tokens belonging to this actor */\n  accessTokens: Array<AccessToken>;\n  /**\n   * Server feature gate values for this actor, optionally filtering by desired gates.\n   * Only resolves for the viewer.\n   */\n  featureGates: Scalars['JSONObject'];\n};\n\nexport type CurrentUserQuery = { __typename?: 'RootQuery' } & {\n  meActor?: Maybe<\n    | ({ __typename: 'User' } & Pick<User, 'username' | 'id' | 'isExpoAdmin'> & {\n          accounts: Array<{ __typename?: 'Account' } & Pick<Account, 'id' | 'name'>>;\n        })\n    | ({ __typename: 'Robot' } & Pick<Robot, 'firstName' | 'id' | 'isExpoAdmin'> & {\n          accounts: Array<{ __typename?: 'Account' } & Pick<Account, 'id' | 'name'>>;\n        })\n  >;\n};\n"],"names":["OfferType","Subscription","Prepaid","Addon","Feature","Support","Teams","Builds","OpenSource","AppPrivacy","Public","Unlisted","Hidden","AppPlatform","Ios","Android","SecondFactorMethod","Authenticator","Sms","Permission","Own","Admin","Publish","View","Role","Owner","Developer","ViewOnly","Custom","HasAdmin","NotAdmin","BuildJobLogsFormat","Raw","Json","BuildJobStatus","Pending","Started","InProgress","Errored","Finished","SentToQueue","AppleDeviceClass","Ipad","Iphone","IosDistributionType","AppStore","Enterprise","AdHoc","Development","AppStoreConnectUserRole","Finance","Technical","AccountHolder","ReadOnly","Sales","Marketing","AppManager","AccessToReports","CustomerSupport","CreateApps","CloudManagedDeveloperId","CloudManagedAppDistribution","ImageManager","Unknown","AndroidFcmVersion","Legacy","V1","AndroidKeystoreType","Jks","Pkcs12","WebhookType","Build","Submit"],"mappings":"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"}