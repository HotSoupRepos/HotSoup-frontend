{"version":3,"sources":["../../../src/install/checkPackages.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\n\nimport * as Log from '../log';\nimport {\n  getVersionedDependenciesAsync,\n  logIncorrectDependencies,\n} from '../start/doctor/dependencies/validateDependenciesVersions';\nimport { env } from '../utils/env';\nimport { confirmAsync } from '../utils/prompts';\nimport { installPackagesAsync } from './installAsync';\nimport { Options } from './resolveOptions';\n\n// Exposed for testing.\nexport async function checkPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    options: { fix },\n    packageManagerArguments,\n  }: {\n    /**\n     * List of packages to version\n     * @example ['uuid', 'react-native-reanimated@latest']\n     */\n    packages: string[];\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NpmPackageManager | PackageManager.YarnPackageManager;\n\n    /** How the check should resolve */\n    options: Pick<Options, 'fix'>;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n) {\n  // Read the project Expo config without plugins.\n  const { exp, pkg } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  const dependencies = await getVersionedDependenciesAsync(projectRoot, exp, pkg, packages);\n\n  if (!dependencies.length) {\n    Log.exit(chalk.greenBright('Dependencies are up to date'), 0);\n  }\n\n  logIncorrectDependencies(dependencies);\n\n  const value =\n    // If `--fix` then always fix.\n    fix ||\n    // Otherwise prompt to fix when not running in CI.\n    (!env.CI && (await confirmAsync({ message: 'Fix dependencies?' }).catch(() => false)));\n\n  if (value) {\n    // Just pass in the names, the install function will resolve the versions again.\n    const fixedDependencies = dependencies.map((dependency) => dependency.packageName);\n    Log.debug('Installing fixed dependencies:', fixedDependencies);\n    // Install the corrected dependencies.\n    return installPackagesAsync(projectRoot, {\n      packageManager,\n      packages: fixedDependencies,\n      packageManagerArguments,\n      sdkVersion: exp.sdkVersion!,\n    });\n  }\n  // Exit with non-zero exit code if any of the dependencies are out of date.\n  Log.exit(chalk.red('Found outdated dependencies'), 1);\n}\n"],"names":["checkPackagesAsync","Log","projectRoot","packages","packageManager","options","fix","packageManagerArguments","exp","pkg","getConfig","skipPlugins","dependencies","getVersionedDependenciesAsync","length","exit","chalk","greenBright","logIncorrectDependencies","value","env","CI","confirmAsync","message","catch","fixedDependencies","map","dependency","packageName","debug","installPackagesAsync","sdkVersion","red"],"mappings":"AAAA;;;;QAesBA,kBAAkB,GAAlBA,kBAAkB;AAfd,IAAA,OAAc,WAAd,cAAc,CAAA;AAEtB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAEbC,IAAAA,GAAG,mCAAM,QAAQ,EAAd;AAIR,IAAA,6BAA2D,WAA3D,2DAA2D,CAAA;AAC9C,IAAA,IAAc,WAAd,cAAc,CAAA;AACL,IAAA,QAAkB,WAAlB,kBAAkB,CAAA;AACV,IAAA,aAAgB,WAAhB,gBAAgB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI9C,eAAeD,kBAAkB,CACtCE,WAAmB,EACnB,EACEC,QAAQ,CAAA,EACRC,cAAc,CAAA,EACdC,OAAO,EAAE,EAAEC,GAAG,CAAA,EAAE,CAAA,EAChBC,uBAAuB,CAAA,EAiBxB,EACD;IACA,gDAAgD;IAChD,MAAM,EAAEC,GAAG,CAAA,EAAEC,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAI5B,CAAA,UAJ4B,CAACR,WAAW,EAAE;QAC1C,iFAAiF;QACjF,yEAAyE;QACzES,WAAW,EAAE,IAAI;KAClB,CAAC,AAAC;IAEH,MAAMC,YAAY,GAAG,MAAMC,CAAAA,GAAAA,6BAA6B,AAAiC,CAAA,8BAAjC,CAACX,WAAW,EAAEM,GAAG,EAAEC,GAAG,EAAEN,QAAQ,CAAC,AAAC;IAE1F,IAAI,CAACS,YAAY,CAACE,MAAM,EAAE;QACxBb,GAAG,CAACc,IAAI,CAACC,MAAK,QAAA,CAACC,WAAW,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/D;IAEDC,CAAAA,GAAAA,6BAAwB,AAAc,CAAA,yBAAd,CAACN,YAAY,CAAC,CAAC;IAEvC,MAAMO,KAAK,GACT,8BAA8B;IAC9Bb,GAAG,IACH,kDAAkD;IAClD,CAAC,CAACc,IAAG,IAAA,CAACC,EAAE,IAAK,MAAMC,CAAAA,GAAAA,QAAY,AAAkC,CAAA,aAAlC,CAAC;QAAEC,OAAO,EAAE,mBAAmB;KAAE,CAAC,CAACC,KAAK,CAAC,IAAM,KAAK;IAAA,CAAC,AAAC,CAAC,AAAC;IAEzF,IAAIL,KAAK,EAAE;QACT,gFAAgF;QAChF,MAAMM,iBAAiB,GAAGb,YAAY,CAACc,GAAG,CAAC,CAACC,UAAU,GAAKA,UAAU,CAACC,WAAW;QAAA,CAAC,AAAC;QACnF3B,GAAG,CAAC4B,KAAK,CAAC,gCAAgC,EAAEJ,iBAAiB,CAAC,CAAC;QAC/D,sCAAsC;QACtC,OAAOK,CAAAA,GAAAA,aAAoB,AAKzB,CAAA,qBALyB,CAAC5B,WAAW,EAAE;YACvCE,cAAc;YACdD,QAAQ,EAAEsB,iBAAiB;YAC3BlB,uBAAuB;YACvBwB,UAAU,EAAEvB,GAAG,CAACuB,UAAU;SAC3B,CAAC,CAAC;KACJ;IACD,2EAA2E;IAC3E9B,GAAG,CAACc,IAAI,CAACC,MAAK,QAAA,CAACgB,GAAG,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,CAAC;CACvD"}