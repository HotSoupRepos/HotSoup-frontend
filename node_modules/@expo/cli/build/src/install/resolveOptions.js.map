{"version":3,"sources":["../../../src/install/resolveOptions.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\n\nimport * as Log from '../log';\nimport { CommandError } from '../utils/errors';\n\nexport type Options = Pick<PackageManager.CreateForProjectOptions, 'npm' | 'yarn'> & {\n  /** Check which packages need to be updated, does not install any provided packages. */\n  check?: boolean;\n  /** Should the dependencies be fixed automatically. */\n  fix?: boolean;\n};\n\nfunction resolveOptions(options: Options): Options {\n  if (options.fix && options.check) {\n    throw new CommandError('BAD_ARGS', 'Specify at most one of: --check, --fix');\n  }\n  if (options.npm && options.yarn) {\n    throw new CommandError('BAD_ARGS', 'Specify at most one of: --npm, --yarn');\n  }\n  return {\n    ...options,\n  };\n}\n\n/** Given a list of CLI args, return a sorted set of args based on categories used in a complex command. */\nexport function parseVariadicArguments(argv: string[]): {\n  variadic: string[];\n  extras: string[];\n  flags: Record<string, boolean>;\n} {\n  const variadic: string[] = [];\n  const flags: Record<string, boolean> = {};\n\n  for (const arg of argv) {\n    if (!arg.startsWith('-')) {\n      variadic.push(arg);\n    } else if (arg === '--') {\n      break;\n    } else {\n      flags[arg] = true;\n    }\n  }\n\n  // Everything after `--` that is not an option is passed to the underlying install command.\n  const extras: string[] = [];\n\n  const extraOperator = argv.indexOf('--');\n  if (extraOperator > -1 && argv.length > extraOperator + 1) {\n    const extraArgs = argv.slice(extraOperator + 1);\n    if (extraArgs.includes('--')) {\n      throw new CommandError('BAD_ARGS', 'Unexpected multiple --');\n    }\n    extras.push(...extraArgs);\n    Log.debug('Extra arguments: ' + extras.join(', '));\n  }\n\n  Log.debug(`Parsed arguments (variadic: %O, flags: %O, extra: %O)`, variadic, flags, extras);\n\n  return {\n    variadic,\n    flags,\n    extras,\n  };\n}\n\nexport async function resolveArgsAsync(\n  argv: string[]\n): Promise<{ variadic: string[]; options: Options; extras: string[] }> {\n  const { variadic, extras, flags } = parseVariadicArguments(argv);\n\n  assertUnexpectedObjectKeys(['--check', '--fix', '--npm', '--yarn'], flags);\n\n  return {\n    // Variadic arguments like `npx expo install react react-dom` -> ['react', 'react-dom']\n    variadic,\n    options: resolveOptions({\n      fix: !!flags['--fix'],\n      check: !!flags['--check'],\n      yarn: !!flags['--yarn'],\n      npm: !!flags['--npm'],\n    }),\n    extras,\n  };\n}\n\nfunction assertUnexpectedObjectKeys(keys: string[], obj: Record<string, any>): void {\n  const unexpectedKeys = Object.keys(obj).filter((key) => !keys.includes(key));\n  if (unexpectedKeys.length > 0) {\n    throw new CommandError('BAD_ARGS', `Unexpected: ${unexpectedKeys.join(', ')}`);\n  }\n}\n"],"names":["parseVariadicArguments","resolveArgsAsync","Log","resolveOptions","options","fix","check","CommandError","npm","yarn","argv","variadic","flags","arg","startsWith","push","extras","extraOperator","indexOf","length","extraArgs","slice","includes","debug","join","assertUnexpectedObjectKeys","keys","obj","unexpectedKeys","Object","filter","key"],"mappings":"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"}