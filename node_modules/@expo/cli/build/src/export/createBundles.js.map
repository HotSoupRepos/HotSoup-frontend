{"version":3,"sources":["../../../src/export/createBundles.ts"],"sourcesContent":["import { getConfig, Platform, ProjectTarget } from '@expo/config';\n\nimport * as Log from '../log';\nimport { resolveEntryPoint } from '../start/server/middleware/resolveEntryPoint';\nimport { bundleAsync, BundleOutput } from './fork-bundleAsync';\n\nexport type PublishOptions = {\n  releaseChannel?: string;\n  target?: ProjectTarget;\n  resetCache?: boolean;\n  maxWorkers?: number;\n};\n\n// TODO: Reduce layers of indirection\nexport async function createBundlesAsync(\n  projectRoot: string,\n  publishOptions: PublishOptions = {},\n  bundleOptions: { platforms: Platform[]; dev?: boolean; useDevServer: boolean }\n): Promise<Partial<Record<Platform, BundleOutput>>> {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  const bundles = await bundleAsync(\n    projectRoot,\n    exp,\n    {\n      // If not legacy, ignore the target option to prevent warnings from being thrown.\n      resetCache: publishOptions.resetCache,\n      maxWorkers: publishOptions.maxWorkers,\n      logger: {\n        info(tag: unknown, message: string) {\n          Log.log(message);\n        },\n        error(tag: unknown, message: string) {\n          Log.error(message);\n        },\n      } as any,\n      quiet: false,\n    },\n    bundleOptions.platforms.map((platform: Platform) => ({\n      platform,\n      entryPoint: resolveEntryPoint(projectRoot, platform),\n      dev: bundleOptions.dev,\n    }))\n  );\n\n  // { ios: bundle, android: bundle }\n  return bundleOptions.platforms.reduce<Partial<Record<Platform, BundleOutput>>>(\n    (prev, platform, index) => ({\n      ...prev,\n      [platform]: bundles[index],\n    }),\n    {}\n  );\n}\n"],"names":["createBundlesAsync","Log","projectRoot","publishOptions","bundleOptions","exp","getConfig","skipSDKVersionRequirement","bundles","bundleAsync","resetCache","maxWorkers","logger","info","tag","message","log","error","quiet","platforms","map","platform","entryPoint","resolveEntryPoint","dev","reduce","prev","index"],"mappings":"AAAA;;;;QAcsBA,kBAAkB,GAAlBA,kBAAkB;AAdW,IAAA,OAAc,WAAd,cAAc,CAAA;AAErDC,IAAAA,GAAG,mCAAM,QAAQ,EAAd;AACmB,IAAA,kBAA8C,WAA9C,8CAA8C,CAAA;AACtC,IAAA,gBAAoB,WAApB,oBAAoB,CAAA;;;;;;;;;;;;;;;;;;;;;;AAUvD,eAAeD,kBAAkB,CACtCE,WAAmB,EACnBC,cAA8B,GAAG,EAAE,EACnCC,aAA8E,EAC5B;IAClD,MAAM,EAAEC,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAkD,CAAA,UAAlD,CAACJ,WAAW,EAAE;QAAEK,yBAAyB,EAAE,IAAI;KAAE,CAAC,AAAC;IAE5E,MAAMC,OAAO,GAAG,MAAMC,CAAAA,GAAAA,gBAAW,AAsBhC,CAAA,YAtBgC,CAC/BP,WAAW,EACXG,GAAG,EACH;QACE,iFAAiF;QACjFK,UAAU,EAAEP,cAAc,CAACO,UAAU;QACrCC,UAAU,EAAER,cAAc,CAACQ,UAAU;QACrCC,MAAM,EAAE;YACNC,IAAI,EAACC,GAAY,EAAEC,OAAe,EAAE;gBAClCd,GAAG,CAACe,GAAG,CAACD,OAAO,CAAC,CAAC;aAClB;YACDE,KAAK,EAACH,GAAY,EAAEC,OAAe,EAAE;gBACnCd,GAAG,CAACgB,KAAK,CAACF,OAAO,CAAC,CAAC;aACpB;SACF;QACDG,KAAK,EAAE,KAAK;KACb,EACDd,aAAa,CAACe,SAAS,CAACC,GAAG,CAAC,CAACC,QAAkB,GAAK,CAAC;YACnDA,QAAQ;YACRC,UAAU,EAAEC,CAAAA,GAAAA,kBAAiB,AAAuB,CAAA,kBAAvB,CAACrB,WAAW,EAAEmB,QAAQ,CAAC;YACpDG,GAAG,EAAEpB,aAAa,CAACoB,GAAG;SACvB,CAAC;IAAA,CAAC,CACJ,AAAC;IAEF,mCAAmC;IACnC,OAAOpB,aAAa,CAACe,SAAS,CAACM,MAAM,CACnC,CAACC,IAAI,EAAEL,QAAQ,EAAEM,KAAK,GAAK,CAAC;YAC1B,GAAGD,IAAI;YACP,CAACL,QAAQ,CAAC,EAAEb,OAAO,CAACmB,KAAK,CAAC;SAC3B,CAAC;IAAA,EACF,EAAE,CACH,CAAC;CACH"}