{"version":3,"sources":["../../../src/export/fork-bundleAsync.ts"],"sourcesContent":["import Log from '@expo/bunyan';\nimport { ExpoConfig, getConfigFilePaths } from '@expo/config';\nimport {\n  buildHermesBundleAsync,\n  isEnableHermesManaged,\n  maybeThrowFromInconsistentEngineAsync,\n} from '@expo/dev-server/build/HermesBundler';\nimport {\n  importExpoMetroConfigFromProject,\n  importMetroFromProject,\n  importMetroServerFromProject,\n} from '@expo/dev-server/build/metro/importMetroFromProject';\nimport { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport Metro from 'metro';\nimport { Terminal } from 'metro-core';\n\nimport { MetroTerminalReporter } from '../start/server/metro/MetroTerminalReporter';\n\nexport type MetroDevServerOptions = LoadOptions & {\n  logger: Log;\n  quiet?: boolean;\n};\nexport type BundleOptions = {\n  entryPoint: string;\n  platform: 'android' | 'ios' | 'web';\n  dev?: boolean;\n  minify?: boolean;\n  sourceMapUrl?: string;\n};\nexport type BundleAssetWithFileHashes = Metro.AssetData & {\n  fileHashes: string[]; // added by the hashAssets asset plugin\n};\nexport type BundleOutput = {\n  code: string;\n  map: string;\n  hermesBytecodeBundle?: Uint8Array;\n  hermesSourcemap?: string;\n  assets: readonly BundleAssetWithFileHashes[];\n};\n\nfunction getExpoMetroConfig(\n  projectRoot: string,\n  { logger }: Pick<MetroDevServerOptions, 'logger'>\n): typeof import('@expo/metro-config') {\n  try {\n    return importExpoMetroConfigFromProject(projectRoot);\n  } catch {\n    // If expo isn't installed, use the unversioned config and warn about installing expo.\n  }\n\n  const unversionedVersion = require('@expo/metro-config/package.json').version;\n  logger.info(\n    { tag: 'expo' },\n    chalk.gray(\n      `\\u203A Unversioned ${chalk.bold`@expo/metro-config@${unversionedVersion}`} is being used. Bundling apps may not work as expected, and is subject to breaking changes. Install ${chalk.bold`expo`} or set the app.json sdkVersion to use a stable version of @expo/metro-config.`\n    )\n  );\n\n  return require('@expo/metro-config');\n}\n\nlet nextBuildID = 0;\n\n// Fork of @expo/dev-server bundleAsync to add Metro logging back.\n\nexport async function bundleAsync(\n  projectRoot: string,\n  expoConfig: ExpoConfig,\n  options: MetroDevServerOptions,\n  bundles: BundleOptions[]\n): Promise<BundleOutput[]> {\n  const metro = importMetroFromProject(projectRoot);\n  const Server = importMetroServerFromProject(projectRoot);\n\n  let reportEvent: ((event: any) => void) | undefined;\n\n  const terminal = new Terminal(process.stdout);\n  const terminalReporter = new MetroTerminalReporter(projectRoot, terminal);\n\n  const reporter = {\n    update(event: any) {\n      terminalReporter.update(event);\n      if (reportEvent) {\n        reportEvent(event);\n      }\n    },\n  };\n\n  const ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n\n  const config = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n  const buildID = `bundle_${nextBuildID++}`;\n\n  // @ts-expect-error\n  const metroServer = await metro.runMetro(config, {\n    watch: false,\n  });\n\n  const buildAsync = async (bundle: BundleOptions): Promise<BundleOutput> => {\n    const bundleOptions: Metro.BundleOptions = {\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      bundleType: 'bundle',\n      platform: bundle.platform,\n      entryFile: bundle.entryPoint,\n      dev: bundle.dev ?? false,\n      minify: bundle.minify ?? !bundle.dev,\n      inlineSourceMap: false,\n      sourceMapUrl: bundle.sourceMapUrl,\n      createModuleIdFactory: config.serializer.createModuleIdFactory,\n      onProgress: (transformedFileCount: number, totalFileCount: number) => {\n        if (!options.quiet) {\n          reporter.update({\n            buildID,\n            type: 'bundle_transform_progressed',\n            transformedFileCount,\n            totalFileCount,\n          });\n        }\n      },\n    };\n    reporter.update({\n      buildID,\n      type: 'bundle_build_started',\n      bundleDetails: {\n        bundleType: bundleOptions.bundleType,\n        platform: bundle.platform,\n        entryFile: bundle.entryPoint,\n        dev: bundle.dev ?? false,\n        minify: bundle.minify ?? false,\n      },\n    });\n    const { code, map } = await metroServer.build(bundleOptions);\n    const assets = (await metroServer.getAssets(\n      bundleOptions\n    )) as readonly BundleAssetWithFileHashes[];\n    reporter.update({\n      buildID,\n      type: 'bundle_build_done',\n    });\n    return { code, map, assets };\n  };\n\n  const maybeAddHermesBundleAsync = async (\n    bundle: BundleOptions,\n    bundleOutput: BundleOutput\n  ): Promise<BundleOutput> => {\n    const { platform } = bundle;\n    const isHermesManaged = isEnableHermesManaged(expoConfig, platform);\n\n    const paths = getConfigFilePaths(projectRoot);\n    const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n    await maybeThrowFromInconsistentEngineAsync(\n      projectRoot,\n      configFilePath,\n      platform,\n      isHermesManaged\n    );\n\n    if (isHermesManaged) {\n      const platformTag = chalk.bold(\n        { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform\n      );\n      options.logger.info(\n        { tag: 'expo' },\n        `ðŸ’¿ ${platformTag} Building Hermes bytecode for the bundle`\n      );\n      const hermesBundleOutput = await buildHermesBundleAsync(\n        projectRoot,\n        bundleOutput.code,\n        bundleOutput.map,\n        bundle.minify\n      );\n      bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n      bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap;\n    }\n    return bundleOutput;\n  };\n\n  try {\n    const intermediateOutputs = await Promise.all(bundles.map((bundle) => buildAsync(bundle)));\n    const bundleOutputs: BundleOutput[] = [];\n    for (let i = 0; i < bundles.length; ++i) {\n      // hermesc does not support parallel building even we spawn processes.\n      // we should build them sequentially.\n      bundleOutputs.push(await maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n    }\n    return bundleOutputs;\n  } finally {\n    metroServer.end();\n  }\n}\n"],"names":["bundleAsync","getExpoMetroConfig","projectRoot","logger","importExpoMetroConfigFromProject","unversionedVersion","require","version","info","tag","chalk","gray","bold","nextBuildID","expoConfig","options","bundles","metro","importMetroFromProject","Server","importMetroServerFromProject","reportEvent","terminal","Terminal","process","stdout","terminalReporter","MetroTerminalReporter","reporter","update","event","ExpoMetroConfig","config","loadAsync","buildID","metroServer","runMetro","watch","buildAsync","bundle","bundleOptions","DEFAULT_BUNDLE_OPTIONS","bundleType","platform","entryFile","entryPoint","dev","minify","inlineSourceMap","sourceMapUrl","createModuleIdFactory","serializer","onProgress","transformedFileCount","totalFileCount","quiet","type","bundleDetails","code","map","build","assets","getAssets","maybeAddHermesBundleAsync","bundleOutput","isHermesManaged","isEnableHermesManaged","paths","getConfigFilePaths","configFilePath","dynamicConfigPath","staticConfigPath","maybeThrowFromInconsistentEngineAsync","platformTag","ios","android","web","hermesBundleOutput","buildHermesBundleAsync","hermesBytecodeBundle","hbc","hermesSourcemap","sourcemap","intermediateOutputs","Promise","all","bundleOutputs","i","length","push","end"],"mappings":"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"}