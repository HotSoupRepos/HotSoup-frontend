{"version":3,"file":"remoteDevtoolsSecurityHeadersMiddleware.js","sourceRoot":"","sources":["../../src/middleware/remoteDevtoolsSecurityHeadersMiddleware.ts"],"names":[],"mappings":";;;AAEA,yEAAyE;AACzE,qDAAqD;AACrD,SAAgB,uCAAuC,CACrD,GAAoB,EACpB,GAAmB,EACnB,IAA2B;IAE3B,kCAAkC;IAClC,IACE,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,QAAQ;QACtC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC;QACnD,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,mDAAmD,CAAC,EAC9E;QACA,IAAI,CACF,IAAI,KAAK,CACP,6BAA6B,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI;YACjD,yFAAyF;YACzF,sEAAsE,CACzE,CACF,CAAC;QACF,OAAO;KACR;IAED,4BAA4B;IAC5B,GAAG,CAAC,SAAS,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;IAEnD,IAAI,EAAE,CAAC;AACT,CAAC;AAzBD,0FAyBC","sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http';\n\n// Like securityHeadersMiddleware but further allow cross-origin requests\n// from https://chrome-devtools-frontend.appspot.com/\nexport function remoteDevtoolsSecurityHeadersMiddleware(\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) {\n  // Block any cross origin request.\n  if (\n    typeof req.headers.origin === 'string' &&\n    !req.headers.origin.match(/^https?:\\/\\/localhost:/) &&\n    !req.headers.origin.match(/^https:\\/\\/chrome-devtools-frontend\\.appspot\\.com/)\n  ) {\n    next(\n      new Error(\n        `Unauthorized request from ${req.headers.origin}. ` +\n          'This may happen because of a conflicting browser extension to intercept HTTP requests. ' +\n          'Please try again without browser extensions or using incognito mode.'\n      )\n    );\n    return;\n  }\n\n  // Block MIME-type sniffing.\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n\n  next();\n}\n"]}