{"version":3,"file":"LogReporter.js","sourceRoot":"","sources":["../src/LogReporter.ts"],"names":[],"mappings":";;AACA,qDAAiD;AAEjD,MAAqB,WAAW;IAC9B,YAAmB,MAAW,EAAS,cAAoC,GAAG,EAAE,GAAE,CAAC;QAAhE,WAAM,GAAN,MAAM,CAAK;QAAS,gBAAW,GAAX,WAAW,CAAiC;QACjF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,KAAU;QACf,IAAI,KAAK,CAAC,KAAK,YAAY,KAAK,EAAE;YAChC,KAAK,CAAC,KAAK,GAAG,IAAA,gCAAc,EAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC3C;QACD,4FAA4F;QAC5F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;CACF;AAdD,8BAcC","sourcesContent":["import Log from '@expo/bunyan';\nimport { serializeError } from 'serialize-error';\n\nexport default class LogReporter {\n  constructor(public logger: Log, public reportEvent: (event: any) => void = () => {}) {\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n  }\n\n  update(event: any) {\n    if (event.error instanceof Error) {\n      event.error = serializeError(event.error);\n    }\n    // TODO(ville): replace xdl.PackagerLogsStream with a reporter to avoid serializing to JSON.\n    this.logger.info({ tag: 'metro' }, JSON.stringify(event));\n    this.reportEvent(event);\n  }\n}\n"]}