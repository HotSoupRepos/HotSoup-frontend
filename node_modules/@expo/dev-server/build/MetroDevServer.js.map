{"version":3,"file":"MetroDevServer.js","sourceRoot":"","sources":["../src/MetroDevServer.ts"],"names":[],"mappings":"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","sourcesContent":["import type Log from '@expo/bunyan';\nimport { ExpoConfig, getConfigFilePaths } from '@expo/config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport type { Server as ConnectServer } from 'connect';\nimport http from 'http';\nimport type Metro from 'metro';\n\nimport {\n  buildHermesBundleAsync,\n  isEnableHermesManaged,\n  maybeThrowFromInconsistentEngineAsync,\n} from './HermesBundler';\nimport LogReporter from './LogReporter';\nimport {\n  importExpoMetroConfigFromProject,\n  importInspectorProxyServerFromProject,\n  importMetroFromProject,\n  importMetroServerFromProject,\n} from './metro/importMetroFromProject';\nimport { createDevServerMiddleware } from './middleware/devServerMiddleware';\n\nexport type MetroDevServerOptions = LoadOptions & {\n  logger: Log;\n  quiet?: boolean;\n  unversioned?: boolean;\n};\nexport type BundleOptions = {\n  entryPoint: string;\n  platform: 'android' | 'ios' | 'web';\n  dev?: boolean;\n  minify?: boolean;\n  sourceMapUrl?: string;\n};\nexport type BundleAssetWithFileHashes = Metro.AssetData & {\n  fileHashes: string[]; // added by the hashAssets asset plugin\n};\nexport type BundleOutput = {\n  code: string;\n  map: string;\n  hermesBytecodeBundle?: Uint8Array;\n  hermesSourcemap?: string;\n  assets: readonly BundleAssetWithFileHashes[];\n};\nexport type MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nfunction getExpoMetroConfig(\n  projectRoot: string,\n  { logger, unversioned }: Pick<MetroDevServerOptions, 'logger' | 'unversioned'>\n): typeof import('@expo/metro-config') {\n  if (!unversioned) {\n    try {\n      return importExpoMetroConfigFromProject(projectRoot);\n    } catch {\n      // If expo isn't installed, use the unversioned config and warn about installing expo.\n    }\n  }\n\n  const unversionedVersion = require('@expo/metro-config/package.json').version;\n  logger.info(\n    { tag: 'expo' },\n    chalk.gray(\n      `\\u203A Unversioned ${chalk.bold`@expo/metro-config@${unversionedVersion}`} is being used. Bundling apps may not work as expected, and is subject to breaking changes. Install ${chalk.bold`expo`} or set the app.json sdkVersion to use a stable version of @expo/metro-config.`\n    )\n  );\n\n  return require('@expo/metro-config');\n}\n\nexport async function runMetroDevServerAsync(\n  projectRoot: string,\n  options: MetroDevServerOptions\n): Promise<{\n  server: http.Server;\n  middleware: any;\n  messageSocket: MessageSocket;\n}> {\n  const Metro = importMetroFromProject(projectRoot);\n\n  const reporter = new LogReporter(options.logger);\n\n  const ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n\n  const metroConfig = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n\n  const {\n    middleware,\n    attachToServer,\n\n    // RN +68 -- Expo SDK +45\n    messageSocketEndpoint,\n    eventsSocketEndpoint,\n    websocketEndpoints,\n  } = createDevServerMiddleware(projectRoot, {\n    port: metroConfig.server.port,\n    watchFolders: metroConfig.watchFolders,\n    logger: options.logger,\n  });\n\n  const customEnhanceMiddleware = metroConfig.server.enhanceMiddleware;\n  // @ts-ignore can't mutate readonly config\n  metroConfig.server.enhanceMiddleware = (metroMiddleware: any, server: Metro.Server) => {\n    if (customEnhanceMiddleware) {\n      metroMiddleware = customEnhanceMiddleware(metroMiddleware, server);\n    }\n    return middleware.use(metroMiddleware);\n  };\n\n  const server = await Metro.runServer(metroConfig, {\n    hmrEnabled: true,\n    websocketEndpoints,\n  });\n\n  if (attachToServer) {\n    // Expo SDK 44 and lower\n    const { messageSocket, eventsSocket } = attachToServer(server);\n    reporter.reportEvent = eventsSocket.reportEvent;\n\n    return {\n      server,\n      middleware,\n      messageSocket,\n    };\n  } else {\n    // RN +68 -- Expo SDK +45\n    reporter.reportEvent = eventsSocketEndpoint.reportEvent;\n\n    return {\n      server,\n      middleware,\n      messageSocket: messageSocketEndpoint,\n      // debuggerProxyEndpoint,\n    };\n  }\n}\n\nlet nextBuildID = 0;\n\n// TODO: deprecate options.target\nexport async function bundleAsync(\n  projectRoot: string,\n  expoConfig: ExpoConfig,\n  options: MetroDevServerOptions,\n  bundles: BundleOptions[]\n): Promise<BundleOutput[]> {\n  const metro = importMetroFromProject(projectRoot);\n  const Server = importMetroServerFromProject(projectRoot);\n\n  const reporter = new LogReporter(options.logger);\n  const ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n\n  const config = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n  const buildID = `bundle_${nextBuildID++}`;\n\n  const metroServer = await metro.runMetro(config, {\n    watch: false,\n  });\n\n  const buildAsync = async (bundle: BundleOptions): Promise<BundleOutput> => {\n    const bundleOptions: Metro.BundleOptions = {\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      bundleType: 'bundle',\n      platform: bundle.platform,\n      entryFile: bundle.entryPoint,\n      dev: bundle.dev ?? false,\n      minify: bundle.minify ?? !bundle.dev,\n      inlineSourceMap: false,\n      sourceMapUrl: bundle.sourceMapUrl,\n      createModuleIdFactory: config.serializer.createModuleIdFactory,\n      onProgress: (transformedFileCount: number, totalFileCount: number) => {\n        if (!options.quiet) {\n          reporter.update({\n            buildID,\n            type: 'bundle_transform_progressed',\n            transformedFileCount,\n            totalFileCount,\n          });\n        }\n      },\n    };\n    reporter.update({\n      buildID,\n      type: 'bundle_build_started',\n      bundleDetails: {\n        bundleType: bundleOptions.bundleType,\n        platform: bundle.platform,\n        entryFile: bundle.entryPoint,\n        dev: bundle.dev ?? false,\n        minify: bundle.minify ?? false,\n      },\n    });\n    const { code, map } = await metroServer.build(bundleOptions);\n    const assets = (await metroServer.getAssets(\n      bundleOptions\n    )) as readonly BundleAssetWithFileHashes[];\n    reporter.update({\n      buildID,\n      type: 'bundle_build_done',\n    });\n    return { code, map, assets };\n  };\n\n  const maybeAddHermesBundleAsync = async (\n    bundle: BundleOptions,\n    bundleOutput: BundleOutput\n  ): Promise<BundleOutput> => {\n    const { platform } = bundle;\n    const isHermesManaged = isEnableHermesManaged(expoConfig, platform);\n\n    const paths = getConfigFilePaths(projectRoot);\n    const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n    await maybeThrowFromInconsistentEngineAsync(\n      projectRoot,\n      configFilePath,\n      platform,\n      isHermesManaged\n    );\n\n    if (isHermesManaged) {\n      const platformTag = chalk.bold(\n        { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform\n      );\n      options.logger.info(\n        { tag: 'expo' },\n        `💿 ${platformTag} Building Hermes bytecode for the bundle`\n      );\n      const hermesBundleOutput = await buildHermesBundleAsync(\n        projectRoot,\n        bundleOutput.code,\n        bundleOutput.map,\n        bundle.minify\n      );\n      bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n      bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap;\n    }\n    return bundleOutput;\n  };\n\n  try {\n    const intermediateOutputs = await Promise.all(bundles.map(bundle => buildAsync(bundle)));\n    const bundleOutputs: BundleOutput[] = [];\n    for (let i = 0; i < bundles.length; ++i) {\n      // hermesc does not support parallel building even we spawn processes.\n      // we should build them sequentially.\n      bundleOutputs.push(await maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n    }\n    return bundleOutputs;\n  } finally {\n    metroServer.end();\n  }\n}\n\n/**\n * Attach the inspector proxy to a development server.\n * Inspector proxy is used for viewing the JS context in a browser.\n * This must be attached after the server is listening.\n * Attaching consists of pushing custom middleware and appending WebSockets to the server.\n *\n *\n * @param projectRoot\n * @param props.server dev server to add WebSockets to\n * @param props.middleware dev server middleware to add extra middleware to\n */\nexport function attachInspectorProxy(\n  projectRoot: string,\n  { server, middleware }: { server: http.Server; middleware: ConnectServer }\n) {\n  const { InspectorProxy } = importInspectorProxyServerFromProject(projectRoot);\n  const inspectorProxy = new InspectorProxy(projectRoot);\n  if ('addWebSocketListener' in inspectorProxy) {\n    // metro@0.59.0\n    inspectorProxy.addWebSocketListener(server);\n  } else if ('createWebSocketListeners' in inspectorProxy) {\n    // metro@0.66.0\n    // TODO: This isn't properly support without a ws router.\n    inspectorProxy.createWebSocketListeners(server);\n  }\n  // TODO(hypuk): Refactor inspectorProxy.processRequest into separate request handlers\n  // so that we could provide routes (/json/list and /json/version) here.\n  // Currently this causes Metro to give warning about T31407894.\n  // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n  middleware.use(inspectorProxy.processRequest.bind(inspectorProxy));\n\n  return { inspectorProxy };\n}\n\nexport { LogReporter, createDevServerMiddleware };\nexport * from './middlwareMutations';\nexport * from './JsInspector';\n"]}