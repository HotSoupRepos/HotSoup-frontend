{"version":3,"file":"PnpmPackageManager.js","sourceRoot":"","sources":["../src/PnpmPackageManager.ts"],"names":[],"mappings":"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","sourcesContent":["import spawnAsync, { SpawnOptions } from '@expo/spawn-async';\nimport ansiRegex from 'ansi-regex';\nimport assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport split from 'split';\nimport { Transform } from 'stream';\n\nimport { DISABLE_ADS_ENV } from './NodePackageManagers';\nimport { Logger } from './PackageManager';\n\nconst ansi = `(?:${ansiRegex().source})*`;\nconst startPnpmPeerDependencyWarningPattern = new RegExp(\n  `${ansi}WARN${ansi}.*Issues with peer dependencies found`,\n  'g'\n);\n\n/** Exposed for testing */\nexport class PnpmStdoutTransform extends Transform {\n  private isPeerDepsWarning = false;\n\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    const line = chunk.toString();\n\n    if (!this.isPeerDepsWarning && startPnpmPeerDependencyWarningPattern.test(line)) {\n      this.isPeerDepsWarning = true;\n    } else if (this.isPeerDepsWarning && !line) {\n      this.isPeerDepsWarning = false;\n    }\n\n    if (!this.isPeerDepsWarning) {\n      this.push(line);\n    }\n\n    callback();\n  }\n}\n\nexport class PnpmPackageManager {\n  options: SpawnOptions;\n  private log: Logger;\n\n  constructor({ cwd, log, silent }: { cwd: string; log?: Logger; silent?: boolean }) {\n    this.log = log || console.log;\n    this.options = {\n      env: {\n        ...process.env,\n        ...DISABLE_ADS_ENV,\n      },\n      cwd,\n      ...(silent\n        ? { ignoreStdio: true }\n        : {\n            stdio: ['inherit', 'inherit', 'pipe'],\n          }),\n    };\n  }\n\n  get name() {\n    return 'pnpm';\n  }\n\n  async installAsync() {\n    await this._runAsync(['install']);\n  }\n\n  async addWithParametersAsync(names: string[], parameters: string[]) {\n    if (!names.length) return this.installAsync();\n    await this._runAsync(['add', ...parameters, ...names]);\n  }\n\n  async addAsync(...names: string[]) {\n    await this.addWithParametersAsync(names, []);\n  }\n\n  async addDevAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n    await this._runAsync(['add', '--save-dev', ...names]);\n  }\n\n  async addGlobalAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n    await this._runAsync(['add', '--global', ...names]);\n  }\n\n  async removeAsync(...names: string[]) {\n    await this._runAsync(['remove', ...names]);\n  }\n\n  async versionAsync() {\n    const { stdout } = await spawnAsync('pnpm', ['--version'], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async getConfigAsync(key: string) {\n    const { stdout } = await spawnAsync('pnpm', ['config', 'get', key], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async removeLockfileAsync() {\n    assert(this.options.cwd, 'cwd required for PnpmPackageManager.removeLockfileAsync');\n    const lockfilePath = path.join(this.options.cwd, 'pnpm-lock.yaml');\n    if (fs.existsSync(lockfilePath)) {\n      rimraf.sync(lockfilePath);\n    }\n  }\n\n  async cleanAsync() {\n    assert(this.options.cwd, 'cwd required for PnpmPackageManager.cleanAsync');\n    const nodeModulesPath = path.join(this.options.cwd, 'node_modules');\n    if (fs.existsSync(nodeModulesPath)) {\n      rimraf.sync(nodeModulesPath);\n    }\n  }\n\n  // Private\n  private async _runAsync(args: string[]) {\n    if (!this.options.ignoreStdio) {\n      this.log(`> pnpm ${args.join(' ')}`);\n    }\n\n    // Have spawnAsync consume stdio but we don't actually do anything with it if it's ignored\n    const promise = spawnAsync('pnpm', args, { ...this.options, ignoreStdio: false });\n    if (promise.child.stdout && !this.options.ignoreStdio) {\n      promise.child.stdout\n        .pipe(split(/\\r?\\n/, (line: string) => line + '\\n'))\n        .pipe(new PnpmStdoutTransform())\n        .pipe(process.stdout);\n    }\n    return promise;\n  }\n}\n"]}